### YamlMime:ManagedReference
items:
- uid: Petrosik.Utility.SaveManager
  commentId: T:Petrosik.Utility.SaveManager
  id: SaveManager
  parent: Petrosik.Utility
  children:
  - Petrosik.Utility.SaveManager.#ctor(System.String)
  - Petrosik.Utility.SaveManager.#ctor(System.String,System.Environment.SpecialFolder)
  - Petrosik.Utility.SaveManager.CurrentSaveVersion
  - Petrosik.Utility.SaveManager.Delete(System.String)
  - Petrosik.Utility.SaveManager.LoadInfo``1(System.String)
  - Petrosik.Utility.SaveManager.Load``1(System.Boolean)
  - Petrosik.Utility.SaveManager.Load``1(System.String,System.Boolean)
  - Petrosik.Utility.SaveManager.Save``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,``0}})
  - Petrosik.Utility.SaveManager.Save``1(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,Petrosik.Utility.Save{``0},System.Boolean}})
  - Petrosik.Utility.SaveManager.Save``1(System.String,Petrosik.Utility.Save{``0},System.Boolean)
  - Petrosik.Utility.SaveManager.Save``1(System.String,``0)
  - Petrosik.Utility.SaveManager.SavesPath
  langs:
  - csharp
  - vb
  name: SaveManager
  nameWithType: SaveManager
  fullName: Petrosik.Utility.SaveManager
  type: Class
  source:
    remote:
      path: Utility/SaveManager.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: SaveManager
    path: ../Utility/SaveManager.cs
    startLine: 10
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  syntax:
    content: public class SaveManager
    content.vb: Public Class SaveManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Petrosik.UnityUtility.Extensions.IsUnityNull
- uid: Petrosik.Utility.SaveManager.SavesPath
  commentId: F:Petrosik.Utility.SaveManager.SavesPath
  id: SavesPath
  parent: Petrosik.Utility.SaveManager
  langs:
  - csharp
  - vb
  name: SavesPath
  nameWithType: SaveManager.SavesPath
  fullName: Petrosik.Utility.SaveManager.SavesPath
  type: Field
  source:
    remote:
      path: Utility/SaveManager.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: SavesPath
    path: ../Utility/SaveManager.cs
    startLine: 12
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  syntax:
    content: public string SavesPath
    return:
      type: System.String
    content.vb: Public SavesPath As String
- uid: Petrosik.Utility.SaveManager.CurrentSaveVersion
  commentId: F:Petrosik.Utility.SaveManager.CurrentSaveVersion
  id: CurrentSaveVersion
  parent: Petrosik.Utility.SaveManager
  langs:
  - csharp
  - vb
  name: CurrentSaveVersion
  nameWithType: SaveManager.CurrentSaveVersion
  fullName: Petrosik.Utility.SaveManager.CurrentSaveVersion
  type: Field
  source:
    remote:
      path: Utility/SaveManager.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: CurrentSaveVersion
    path: ../Utility/SaveManager.cs
    startLine: 13
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  syntax:
    content: public Version CurrentSaveVersion
    return:
      type: System.Version
    content.vb: Public CurrentSaveVersion As Version
- uid: Petrosik.Utility.SaveManager.#ctor(System.String)
  commentId: M:Petrosik.Utility.SaveManager.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Petrosik.Utility.SaveManager
  langs:
  - csharp
  - vb
  name: SaveManager(string)
  nameWithType: SaveManager.SaveManager(string)
  fullName: Petrosik.Utility.SaveManager.SaveManager(string)
  type: Constructor
  source:
    remote:
      path: Utility/SaveManager.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: .ctor
    path: ../Utility/SaveManager.cs
    startLine: 14
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  syntax:
    content: public SaveManager(string SavesFolderPath)
    parameters:
    - id: SavesFolderPath
      type: System.String
    content.vb: Public Sub New(SavesFolderPath As String)
  overload: Petrosik.Utility.SaveManager.#ctor*
  nameWithType.vb: SaveManager.New(String)
  fullName.vb: Petrosik.Utility.SaveManager.New(String)
  name.vb: New(String)
- uid: Petrosik.Utility.SaveManager.#ctor(System.String,System.Environment.SpecialFolder)
  commentId: M:Petrosik.Utility.SaveManager.#ctor(System.String,System.Environment.SpecialFolder)
  id: '#ctor(System.String,System.Environment.SpecialFolder)'
  parent: Petrosik.Utility.SaveManager
  langs:
  - csharp
  - vb
  name: SaveManager(string, SpecialFolder)
  nameWithType: SaveManager.SaveManager(string, Environment.SpecialFolder)
  fullName: Petrosik.Utility.SaveManager.SaveManager(string, System.Environment.SpecialFolder)
  type: Constructor
  source:
    remote:
      path: Utility/SaveManager.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: .ctor
    path: ../Utility/SaveManager.cs
    startLine: 22
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  syntax:
    content: public SaveManager(string SavesFolderName, Environment.SpecialFolder SpecialFolder)
    parameters:
    - id: SavesFolderName
      type: System.String
    - id: SpecialFolder
      type: System.Environment.SpecialFolder
    content.vb: Public Sub New(SavesFolderName As String, SpecialFolder As Environment.SpecialFolder)
  overload: Petrosik.Utility.SaveManager.#ctor*
  nameWithType.vb: SaveManager.New(String, Environment.SpecialFolder)
  fullName.vb: Petrosik.Utility.SaveManager.New(String, System.Environment.SpecialFolder)
  name.vb: New(String, SpecialFolder)
- uid: Petrosik.Utility.SaveManager.Save``1(System.String,``0)
  commentId: M:Petrosik.Utility.SaveManager.Save``1(System.String,``0)
  id: Save``1(System.String,``0)
  parent: Petrosik.Utility.SaveManager
  langs:
  - csharp
  - vb
  name: Save<T>(string, T)
  nameWithType: SaveManager.Save<T>(string, T)
  fullName: Petrosik.Utility.SaveManager.Save<T>(string, T)
  type: Method
  source:
    remote:
      path: Utility/SaveManager.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: Save
    path: ../Utility/SaveManager.cs
    startLine: 37
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: >-
    Saves the <code class="paramref">Save</code> by the <code class="paramref">Name</code> in the save folder

    <p>In case it get passed the wrapper Save&lt;T&gt; class as the <code class="paramref">Save</code> it strips it and saves only the SaveData</p>
  example: []
  syntax:
    content: 'public void Save<T>(string Name, T Save) where T : notnull'
    parameters:
    - id: Name
      type: System.String
      description: ''
    - id: Save
      type: '{T}'
      description: ''
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Sub Save(Of T)(Name As String, Save As T)
  overload: Petrosik.Utility.SaveManager.Save*
  nameWithType.vb: SaveManager.Save(Of T)(String, T)
  fullName.vb: Petrosik.Utility.SaveManager.Save(Of T)(String, T)
  name.vb: Save(Of T)(String, T)
- uid: Petrosik.Utility.SaveManager.Save``1(System.String,Petrosik.Utility.Save{``0},System.Boolean)
  commentId: M:Petrosik.Utility.SaveManager.Save``1(System.String,Petrosik.Utility.Save{``0},System.Boolean)
  id: Save``1(System.String,Petrosik.Utility.Save{``0},System.Boolean)
  parent: Petrosik.Utility.SaveManager
  langs:
  - csharp
  - vb
  name: Save<T>(string, Save<T>, bool)
  nameWithType: SaveManager.Save<T>(string, Save<T>, bool)
  fullName: Petrosik.Utility.SaveManager.Save<T>(string, Petrosik.Utility.Save<T>, bool)
  type: Method
  source:
    remote:
      path: Utility/SaveManager.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: Save
    path: ../Utility/SaveManager.cs
    startLine: 48
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: If <code class="paramref">UpdateWrapper</code> is false it save the <code class="paramref">Save</code> as is, otherwise it tries to updates wrapper values (LastUpdated, Version, etc.) if the file already exists
  example: []
  syntax:
    content: 'public void Save<T>(string Name, Save<T> Save, bool UpdateWrapper = false) where T : notnull'
    parameters:
    - id: Name
      type: System.String
      description: ''
    - id: Save
      type: Petrosik.Utility.Save{{T}}
      description: ''
    - id: UpdateWrapper
      type: System.Boolean
      description: ''
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Sub Save(Of T)(Name As String, Save As Save(Of T), UpdateWrapper As Boolean = False)
  overload: Petrosik.Utility.SaveManager.Save*
  nameWithType.vb: SaveManager.Save(Of T)(String, Save(Of T), Boolean)
  fullName.vb: Petrosik.Utility.SaveManager.Save(Of T)(String, Petrosik.Utility.Save(Of T), Boolean)
  name.vb: Save(Of T)(String, Save(Of T), Boolean)
- uid: Petrosik.Utility.SaveManager.Save``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,``0}})
  commentId: M:Petrosik.Utility.SaveManager.Save``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,``0}})
  id: Save``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,``0}})
  parent: Petrosik.Utility.SaveManager
  langs:
  - csharp
  - vb
  name: Save<T>(IEnumerable<KeyValuePair<string, T>>)
  nameWithType: SaveManager.Save<T>(IEnumerable<KeyValuePair<string, T>>)
  fullName: Petrosik.Utility.SaveManager.Save<T>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, T>>)
  type: Method
  source:
    remote:
      path: Utility/SaveManager.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: Save
    path: ../Utility/SaveManager.cs
    startLine: 57
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: Works same as it's single counter part
  example: []
  syntax:
    content: 'public void Save<T>(IEnumerable<KeyValuePair<string, T>> Saves) where T : notnull'
    parameters:
    - id: Saves
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,{T}}}
      description: ''
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Sub Save(Of T)(Saves As IEnumerable(Of KeyValuePair(Of String, T)))
  overload: Petrosik.Utility.SaveManager.Save*
  nameWithType.vb: SaveManager.Save(Of T)(IEnumerable(Of KeyValuePair(Of String, T)))
  fullName.vb: Petrosik.Utility.SaveManager.Save(Of T)(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, T)))
  name.vb: Save(Of T)(IEnumerable(Of KeyValuePair(Of String, T)))
- uid: Petrosik.Utility.SaveManager.Save``1(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,Petrosik.Utility.Save{``0},System.Boolean}})
  commentId: M:Petrosik.Utility.SaveManager.Save``1(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,Petrosik.Utility.Save{``0},System.Boolean}})
  id: Save``1(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,Petrosik.Utility.Save{``0},System.Boolean}})
  parent: Petrosik.Utility.SaveManager
  langs:
  - csharp
  - vb
  name: Save<T>(IEnumerable<(string Name, Save<T> Save, bool UpdateWrapper)>)
  nameWithType: SaveManager.Save<T>(IEnumerable<(string Name, Save<T> Save, bool UpdateWrapper)>)
  fullName: Petrosik.Utility.SaveManager.Save<T>(System.Collections.Generic.IEnumerable<(string Name, Petrosik.Utility.Save<T> Save, bool UpdateWrapper)>)
  type: Method
  source:
    remote:
      path: Utility/SaveManager.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: Save
    path: ../Utility/SaveManager.cs
    startLine: 69
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: Works same as it's single counter part
  example: []
  syntax:
    content: 'public void Save<T>(IEnumerable<(string Name, Save<T> Save, bool UpdateWrapper)> Saves) where T : notnull'
    parameters:
    - id: Saves
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,Petrosik.Utility.Save{{T}},System.Boolean}}
      description: ''
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Sub Save(Of T)(Saves As IEnumerable(Of (Name As String, Save As Save(Of T), UpdateWrapper As Boolean)))
  overload: Petrosik.Utility.SaveManager.Save*
  nameWithType.vb: SaveManager.Save(Of T)(IEnumerable(Of (Name As String, Save As Save(Of T), UpdateWrapper As Boolean)))
  fullName.vb: Petrosik.Utility.SaveManager.Save(Of T)(System.Collections.Generic.IEnumerable(Of (Name As String, Save As Petrosik.Utility.Save(Of T), UpdateWrapper As Boolean)))
  name.vb: Save(Of T)(IEnumerable(Of (Name As String, Save As Save(Of T), UpdateWrapper As Boolean)))
- uid: Petrosik.Utility.SaveManager.Load``1(System.String,System.Boolean)
  commentId: M:Petrosik.Utility.SaveManager.Load``1(System.String,System.Boolean)
  id: Load``1(System.String,System.Boolean)
  parent: Petrosik.Utility.SaveManager
  langs:
  - csharp
  - vb
  name: Load<T>(string, bool)
  nameWithType: SaveManager.Load<T>(string, bool)
  fullName: Petrosik.Utility.SaveManager.Load<T>(string, bool)
  type: Method
  source:
    remote:
      path: Utility/SaveManager.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: Load
    path: ../Utility/SaveManager.cs
    startLine: 83
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: Tries to load the save by the <code class="paramref">Name</code> if it exists
  example: []
  syntax:
    content: 'public Save<T>? Load<T>(string Name, bool InfoOnly) where T : notnull'
    parameters:
    - id: Name
      type: System.String
      description: ''
    - id: InfoOnly
      type: System.Boolean
      description: Specifies if to load only the Save&lt;<code class="typeparamref">T</code>&gt; wrapper information
    typeParameters:
    - id: T
      description: ''
    return:
      type: Petrosik.Utility.Save{{T}}
      description: ''
    content.vb: Public Function Load(Of T)(Name As String, InfoOnly As Boolean) As Save(Of T)
  overload: Petrosik.Utility.SaveManager.Load*
  nameWithType.vb: SaveManager.Load(Of T)(String, Boolean)
  fullName.vb: Petrosik.Utility.SaveManager.Load(Of T)(String, Boolean)
  name.vb: Load(Of T)(String, Boolean)
- uid: Petrosik.Utility.SaveManager.Load``1(System.Boolean)
  commentId: M:Petrosik.Utility.SaveManager.Load``1(System.Boolean)
  id: Load``1(System.Boolean)
  parent: Petrosik.Utility.SaveManager
  langs:
  - csharp
  - vb
  name: Load<T>(bool)
  nameWithType: SaveManager.Load<T>(bool)
  fullName: Petrosik.Utility.SaveManager.Load<T>(bool)
  type: Method
  source:
    remote:
      path: Utility/SaveManager.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: Load
    path: ../Utility/SaveManager.cs
    startLine: 93
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: Tries to load all saves in the saves folder
  example: []
  syntax:
    content: 'public IEnumerable<Save<T>?> Load<T>(bool InfoOnly) where T : notnull'
    parameters:
    - id: InfoOnly
      type: System.Boolean
      description: Specifies if to load only the Save&lt;<code class="typeparamref">T</code>&gt; wrapper information
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{Petrosik.Utility.Save{{T}}}
      description: ''
    content.vb: Public Function Load(Of T)(InfoOnly As Boolean) As IEnumerable(Of Save(Of T))
  overload: Petrosik.Utility.SaveManager.Load*
  nameWithType.vb: SaveManager.Load(Of T)(Boolean)
  fullName.vb: Petrosik.Utility.SaveManager.Load(Of T)(Boolean)
  name.vb: Load(Of T)(Boolean)
- uid: Petrosik.Utility.SaveManager.LoadInfo``1(System.String)
  commentId: M:Petrosik.Utility.SaveManager.LoadInfo``1(System.String)
  id: LoadInfo``1(System.String)
  parent: Petrosik.Utility.SaveManager
  langs:
  - csharp
  - vb
  name: LoadInfo<T>(string)
  nameWithType: SaveManager.LoadInfo<T>(string)
  fullName: Petrosik.Utility.SaveManager.LoadInfo<T>(string)
  type: Method
  source:
    remote:
      path: Utility/SaveManager.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: LoadInfo
    path: ../Utility/SaveManager.cs
    startLine: 169
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: Loads only Additional Info, if the file exists
  example: []
  syntax:
    content: public Save<T>? LoadInfo<T>(string Name)
    parameters:
    - id: Name
      type: System.String
      description: ''
    typeParameters:
    - id: T
    return:
      type: Petrosik.Utility.Save{{T}}
      description: ''
    content.vb: Public Function LoadInfo(Of T)(Name As String) As Save(Of T)
  overload: Petrosik.Utility.SaveManager.LoadInfo*
  nameWithType.vb: SaveManager.LoadInfo(Of T)(String)
  fullName.vb: Petrosik.Utility.SaveManager.LoadInfo(Of T)(String)
  name.vb: LoadInfo(Of T)(String)
- uid: Petrosik.Utility.SaveManager.Delete(System.String)
  commentId: M:Petrosik.Utility.SaveManager.Delete(System.String)
  id: Delete(System.String)
  parent: Petrosik.Utility.SaveManager
  langs:
  - csharp
  - vb
  name: Delete(string)
  nameWithType: SaveManager.Delete(string)
  fullName: Petrosik.Utility.SaveManager.Delete(string)
  type: Method
  source:
    remote:
      path: Utility/SaveManager.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: Delete
    path: ../Utility/SaveManager.cs
    startLine: 195
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: Tries to deletes the save file in the save folder if it exists
  example: []
  syntax:
    content: public void Delete(string Name)
    parameters:
    - id: Name
      type: System.String
      description: ''
    content.vb: Public Sub Delete(Name As String)
  overload: Petrosik.Utility.SaveManager.Delete*
  nameWithType.vb: SaveManager.Delete(String)
  fullName.vb: Petrosik.Utility.SaveManager.Delete(String)
  name.vb: Delete(String)
references:
- uid: Petrosik.Utility
  commentId: N:Petrosik.Utility
  href: Petrosik.html
  name: Petrosik.Utility
  nameWithType: Petrosik.Utility
  fullName: Petrosik.Utility
  spec.csharp:
  - uid: Petrosik
    name: Petrosik
    href: Petrosik.html
  - name: .
  - uid: Petrosik.Utility
    name: Utility
    href: Petrosik.Utility.html
  spec.vb:
  - uid: Petrosik
    name: Petrosik
    href: Petrosik.html
  - name: .
  - uid: Petrosik.Utility
    name: Utility
    href: Petrosik.Utility.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Petrosik.UnityUtility.Extensions.IsUnityNull
  commentId: M:Petrosik.UnityUtility.Extensions.IsUnityNull(System.Object)
  parent: Petrosik.UnityUtility.Extensions
  definition: Petrosik.UnityUtility.Extensions.IsUnityNull(System.Object)
  href: Petrosik.UnityUtility.Extensions.html#Petrosik_UnityUtility_Extensions_IsUnityNull_System_Object_
  name: IsUnityNull(object)
  nameWithType: Extensions.IsUnityNull(object)
  fullName: Petrosik.UnityUtility.Extensions.IsUnityNull(object)
  nameWithType.vb: Extensions.IsUnityNull(Object)
  fullName.vb: Petrosik.UnityUtility.Extensions.IsUnityNull(Object)
  name.vb: IsUnityNull(Object)
  spec.csharp:
  - uid: Petrosik.UnityUtility.Extensions.IsUnityNull(System.Object)
    name: IsUnityNull
    href: Petrosik.UnityUtility.Extensions.html#Petrosik_UnityUtility_Extensions_IsUnityNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Petrosik.UnityUtility.Extensions.IsUnityNull(System.Object)
    name: IsUnityNull
    href: Petrosik.UnityUtility.Extensions.html#Petrosik_UnityUtility_Extensions_IsUnityNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Petrosik.UnityUtility.Extensions.IsUnityNull(System.Object)
  commentId: M:Petrosik.UnityUtility.Extensions.IsUnityNull(System.Object)
  isExternal: true
  href: Petrosik.UnityUtility.Extensions.html#Petrosik_UnityUtility_Extensions_IsUnityNull_System_Object_
  name: IsUnityNull(object)
  nameWithType: Extensions.IsUnityNull(object)
  fullName: Petrosik.UnityUtility.Extensions.IsUnityNull(object)
  nameWithType.vb: Extensions.IsUnityNull(Object)
  fullName.vb: Petrosik.UnityUtility.Extensions.IsUnityNull(Object)
  name.vb: IsUnityNull(Object)
  spec.csharp:
  - uid: Petrosik.UnityUtility.Extensions.IsUnityNull(System.Object)
    name: IsUnityNull
    href: Petrosik.UnityUtility.Extensions.html#Petrosik_UnityUtility_Extensions_IsUnityNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Petrosik.UnityUtility.Extensions.IsUnityNull(System.Object)
    name: IsUnityNull
    href: Petrosik.UnityUtility.Extensions.html#Petrosik_UnityUtility_Extensions_IsUnityNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Petrosik.UnityUtility.Extensions
  commentId: T:Petrosik.UnityUtility.Extensions
  parent: Petrosik.UnityUtility
  href: Petrosik.UnityUtility.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Petrosik.UnityUtility.Extensions
- uid: Petrosik.UnityUtility
  commentId: N:Petrosik.UnityUtility
  href: Petrosik.html
  name: Petrosik.UnityUtility
  nameWithType: Petrosik.UnityUtility
  fullName: Petrosik.UnityUtility
  spec.csharp:
  - uid: Petrosik
    name: Petrosik
    href: Petrosik.html
  - name: .
  - uid: Petrosik.UnityUtility
    name: UnityUtility
    href: Petrosik.UnityUtility.html
  spec.vb:
  - uid: Petrosik
    name: Petrosik
    href: Petrosik.html
  - name: .
  - uid: Petrosik.UnityUtility
    name: UnityUtility
    href: Petrosik.UnityUtility.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Version
  commentId: T:System.Version
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.version
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: Petrosik.Utility.SaveManager.#ctor*
  commentId: Overload:Petrosik.Utility.SaveManager.#ctor
  href: Petrosik.Utility.SaveManager.html#Petrosik_Utility_SaveManager__ctor_System_String_
  name: SaveManager
  nameWithType: SaveManager.SaveManager
  fullName: Petrosik.Utility.SaveManager.SaveManager
  nameWithType.vb: SaveManager.New
  fullName.vb: Petrosik.Utility.SaveManager.New
  name.vb: New
- uid: System.Environment.SpecialFolder
  commentId: T:System.Environment.SpecialFolder
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.environment
  name: Environment.SpecialFolder
  nameWithType: Environment.SpecialFolder
  fullName: System.Environment.SpecialFolder
  spec.csharp:
  - uid: System.Environment
    name: Environment
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.environment
  - name: .
  - uid: System.Environment.SpecialFolder
    name: SpecialFolder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.environment.specialfolder
  spec.vb:
  - uid: System.Environment
    name: Environment
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.environment
  - name: .
  - uid: System.Environment.SpecialFolder
    name: SpecialFolder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.environment.specialfolder
- uid: Petrosik.Utility.SaveManager.Save*
  commentId: Overload:Petrosik.Utility.SaveManager.Save
  href: Petrosik.Utility.SaveManager.html#Petrosik_Utility_SaveManager_Save__1_System_String___0_
  name: Save
  nameWithType: SaveManager.Save
  fullName: Petrosik.Utility.SaveManager.Save
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Petrosik.Utility.Save{{T}}
  commentId: T:Petrosik.Utility.Save{``0}
  parent: Petrosik.Utility
  definition: Petrosik.Utility.Save`1
  href: Petrosik.Utility.Save-1.html
  name: Save<T>
  nameWithType: Save<T>
  fullName: Petrosik.Utility.Save<T>
  nameWithType.vb: Save(Of T)
  fullName.vb: Petrosik.Utility.Save(Of T)
  name.vb: Save(Of T)
  spec.csharp:
  - uid: Petrosik.Utility.Save`1
    name: Save
    href: Petrosik.Utility.Save-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Petrosik.Utility.Save`1
    name: Save
    href: Petrosik.Utility.Save-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Petrosik.Utility.Save`1
  commentId: T:Petrosik.Utility.Save`1
  href: Petrosik.Utility.Save-1.html
  name: Save<T>
  nameWithType: Save<T>
  fullName: Petrosik.Utility.Save<T>
  nameWithType.vb: Save(Of T)
  fullName.vb: Petrosik.Utility.Save(Of T)
  name.vb: Save(Of T)
  spec.csharp:
  - uid: Petrosik.Utility.Save`1
    name: Save
    href: Petrosik.Utility.Save-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Petrosik.Utility.Save`1
    name: Save
    href: Petrosik.Utility.Save-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,{T}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,``0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<KeyValuePair<string, T>>
  nameWithType: IEnumerable<KeyValuePair<string, T>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, T>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, T))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, T))
  name.vb: IEnumerable(Of KeyValuePair(Of String, T))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,Petrosik.Utility.Save{{T}},System.Boolean}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,Petrosik.Utility.Save{``0},System.Boolean}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(string Name, Save<T> Save, bool UpdateWrapper)>
  nameWithType: IEnumerable<(string Name, Save<T> Save, bool UpdateWrapper)>
  fullName: System.Collections.Generic.IEnumerable<(string Name, Petrosik.Utility.Save<T> Save, bool UpdateWrapper)>
  nameWithType.vb: IEnumerable(Of (Name As String, Save As Save(Of T), UpdateWrapper As Boolean))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (Name As String, Save As Petrosik.Utility.Save(Of T), UpdateWrapper As Boolean))
  name.vb: IEnumerable(Of (Name As String, Save As Save(Of T), UpdateWrapper As Boolean))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,Petrosik.Utility.Save{``0},System.Boolean}.Name
    name: Name
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,petrosik.utility.save---0-,system.boolean-.name
  - name: ','
  - name: " "
  - uid: Petrosik.Utility.Save`1
    name: Save
    href: Petrosik.Utility.Save-1.html
  - name: <
  - name: T
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.String,Petrosik.Utility.Save{``0},System.Boolean}.Save
    name: Save
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,petrosik.utility.save---0-,system.boolean-.save
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{System.String,Petrosik.Utility.Save{``0},System.Boolean}.UpdateWrapper
    name: UpdateWrapper
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,petrosik.utility.save---0-,system.boolean-.updatewrapper
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.String,Petrosik.Utility.Save{``0},System.Boolean}.Name
    name: Name
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,petrosik.utility.save---0-,system.boolean-.name
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,Petrosik.Utility.Save{``0},System.Boolean}.Save
    name: Save
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,petrosik.utility.save---0-,system.boolean-.save
  - name: " "
  - name: As
  - name: " "
  - uid: Petrosik.Utility.Save`1
    name: Save
    href: Petrosik.Utility.Save-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,Petrosik.Utility.Save{``0},System.Boolean}.UpdateWrapper
    name: UpdateWrapper
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,petrosik.utility.save---0-,system.boolean-.updatewrapper
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: Petrosik.Utility.SaveManager.Load*
  commentId: Overload:Petrosik.Utility.SaveManager.Load
  href: Petrosik.Utility.SaveManager.html#Petrosik_Utility_SaveManager_Load__1_System_String_System_Boolean_
  name: Load
  nameWithType: SaveManager.Load
  fullName: Petrosik.Utility.SaveManager.Load
- uid: System.Collections.Generic.IEnumerable{Petrosik.Utility.Save{{T}}}
  commentId: T:System.Collections.Generic.IEnumerable{Petrosik.Utility.Save{``0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Save<T>>
  nameWithType: IEnumerable<Save<T>>
  fullName: System.Collections.Generic.IEnumerable<Petrosik.Utility.Save<T>>
  nameWithType.vb: IEnumerable(Of Save(Of T))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Petrosik.Utility.Save(Of T))
  name.vb: IEnumerable(Of Save(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Petrosik.Utility.Save`1
    name: Save
    href: Petrosik.Utility.Save-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Petrosik.Utility.Save`1
    name: Save
    href: Petrosik.Utility.Save-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Petrosik.Utility.SaveManager.LoadInfo*
  commentId: Overload:Petrosik.Utility.SaveManager.LoadInfo
  href: Petrosik.Utility.SaveManager.html#Petrosik_Utility_SaveManager_LoadInfo__1_System_String_
  name: LoadInfo
  nameWithType: SaveManager.LoadInfo
  fullName: Petrosik.Utility.SaveManager.LoadInfo
- uid: Petrosik.Utility.SaveManager.Delete*
  commentId: Overload:Petrosik.Utility.SaveManager.Delete
  href: Petrosik.Utility.SaveManager.html#Petrosik_Utility_SaveManager_Delete_System_String_
  name: Delete
  nameWithType: SaveManager.Delete
  fullName: Petrosik.Utility.SaveManager.Delete
