### YamlMime:ManagedReference
items:
- uid: Petrosik.Pathfinding.GridBase
  commentId: T:Petrosik.Pathfinding.GridBase
  id: GridBase
  parent: Petrosik.Pathfinding
  children:
  - Petrosik.Pathfinding.GridBase.AddObstacle(Petrosik.Pathfinding.ObstacleObject)
  - Petrosik.Pathfinding.GridBase.AddSingle(System.Int32,System.Int32,Petrosik.Enums.PathOccupancy)
  - Petrosik.Pathfinding.GridBase.ClearObstalces
  - Petrosik.Pathfinding.GridBase.ExportPaths
  - Petrosik.Pathfinding.GridBase.GetGridPosition(System.Drawing.PointF)
  - Petrosik.Pathfinding.GridBase.GetPath(System.Drawing.PointF,System.Drawing.PointF,System.Single)
  - Petrosik.Pathfinding.GridBase.GetPathColor(Petrosik.Enums.PathOccupancy)
  - Petrosik.Pathfinding.GridBase.GetRawPath(System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Boolean)
  - Petrosik.Pathfinding.GridBase.GetWorldPosition(System.Drawing.PointF)
  - Petrosik.Pathfinding.GridBase.Grid
  - Petrosik.Pathfinding.GridBase.GridScale
  - Petrosik.Pathfinding.GridBase.GridSize
  - Petrosik.Pathfinding.GridBase.InportPaths(System.String)
  - Petrosik.Pathfinding.GridBase.LoadedObstacles
  - Petrosik.Pathfinding.GridBase.MaxSegmentCount
  - Petrosik.Pathfinding.GridBase.MoveObstalce(System.Int32,System.Int32)
  - Petrosik.Pathfinding.GridBase.RemoveObstacle(Petrosik.Pathfinding.ObstacleObject)
  - Petrosik.Pathfinding.GridBase.RemoveObstacleAt(System.Int32)
  - Petrosik.Pathfinding.GridBase.SearchRange
  langs:
  - csharp
  - vb
  name: GridBase
  nameWithType: GridBase
  fullName: Petrosik.Pathfinding.GridBase
  type: Class
  source:
    remote:
      path: Utility/Pathfinding/GridBase.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: GridBase
    path: ../Utility/Pathfinding/GridBase.cs
    startLine: 13
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Pathfinding
  syntax:
    content: public class GridBase
    content.vb: Public Class GridBase
  inheritance:
  - System.Object
  derivedClasses:
  - Petrosik.Pathfinding.AStar
  - Petrosik.Pathfinding.PseudoAStar
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Petrosik.UnityUtility.Extensions.IsUnityNull
- uid: Petrosik.Pathfinding.GridBase.GridScale
  commentId: F:Petrosik.Pathfinding.GridBase.GridScale
  id: GridScale
  parent: Petrosik.Pathfinding.GridBase
  langs:
  - csharp
  - vb
  name: GridScale
  nameWithType: GridBase.GridScale
  fullName: Petrosik.Pathfinding.GridBase.GridScale
  type: Field
  source:
    remote:
      path: Utility/Pathfinding/GridBase.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: GridScale
    path: ../Utility/Pathfinding/GridBase.cs
    startLine: 34
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Pathfinding
  summary: How many path units are in 1 world unit
  example: []
  syntax:
    content: public int GridScale
    return:
      type: System.Int32
    content.vb: Public GridScale As Integer
- uid: Petrosik.Pathfinding.GridBase.SearchRange
  commentId: F:Petrosik.Pathfinding.GridBase.SearchRange
  id: SearchRange
  parent: Petrosik.Pathfinding.GridBase
  langs:
  - csharp
  - vb
  name: SearchRange
  nameWithType: GridBase.SearchRange
  fullName: Petrosik.Pathfinding.GridBase.SearchRange
  type: Field
  source:
    remote:
      path: Utility/Pathfinding/GridBase.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: SearchRange
    path: ../Utility/Pathfinding/GridBase.cs
    startLine: 38
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Pathfinding
  summary: How far should pathfinding search by default(world units)
  example: []
  syntax:
    content: public float SearchRange
    return:
      type: System.Single
    content.vb: Public SearchRange As Single
- uid: Petrosik.Pathfinding.GridBase.MaxSegmentCount
  commentId: F:Petrosik.Pathfinding.GridBase.MaxSegmentCount
  id: MaxSegmentCount
  parent: Petrosik.Pathfinding.GridBase
  langs:
  - csharp
  - vb
  name: MaxSegmentCount
  nameWithType: GridBase.MaxSegmentCount
  fullName: Petrosik.Pathfinding.GridBase.MaxSegmentCount
  type: Field
  source:
    remote:
      path: Utility/Pathfinding/GridBase.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: MaxSegmentCount
    path: ../Utility/Pathfinding/GridBase.cs
    startLine: 42
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Pathfinding
  summary: After how many path units should the path make new "node" in the output. (0 for no limit)
  example: []
  syntax:
    content: public int MaxSegmentCount
    return:
      type: System.Int32
    content.vb: Public MaxSegmentCount As Integer
- uid: Petrosik.Pathfinding.GridBase.GridSize
  commentId: P:Petrosik.Pathfinding.GridBase.GridSize
  id: GridSize
  parent: Petrosik.Pathfinding.GridBase
  langs:
  - csharp
  - vb
  name: GridSize
  nameWithType: GridBase.GridSize
  fullName: Petrosik.Pathfinding.GridBase.GridSize
  type: Property
  source:
    remote:
      path: Utility/Pathfinding/GridBase.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: GridSize
    path: ../Utility/Pathfinding/GridBase.cs
    startLine: 46
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Pathfinding
  summary: Size of the current grid
  example: []
  syntax:
    content: public Size GridSize { get; protected set; }
    parameters: []
    return:
      type: System.Drawing.Size
    content.vb: Public Property GridSize As Size
  overload: Petrosik.Pathfinding.GridBase.GridSize*
- uid: Petrosik.Pathfinding.GridBase.Grid
  commentId: F:Petrosik.Pathfinding.GridBase.Grid
  id: Grid
  parent: Petrosik.Pathfinding.GridBase
  langs:
  - csharp
  - vb
  name: Grid
  nameWithType: GridBase.Grid
  fullName: Petrosik.Pathfinding.GridBase.Grid
  type: Field
  source:
    remote:
      path: Utility/Pathfinding/GridBase.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: Grid
    path: ../Utility/Pathfinding/GridBase.cs
    startLine: 47
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Pathfinding
  syntax:
    content: public PathOccupancy[,] Grid
    return:
      type: Petrosik.Enums.PathOccupancy[,]
    content.vb: Public Grid As PathOccupancy(,)
- uid: Petrosik.Pathfinding.GridBase.LoadedObstacles
  commentId: P:Petrosik.Pathfinding.GridBase.LoadedObstacles
  id: LoadedObstacles
  parent: Petrosik.Pathfinding.GridBase
  langs:
  - csharp
  - vb
  name: LoadedObstacles
  nameWithType: GridBase.LoadedObstacles
  fullName: Petrosik.Pathfinding.GridBase.LoadedObstacles
  type: Property
  source:
    remote:
      path: Utility/Pathfinding/GridBase.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: LoadedObstacles
    path: ../Utility/Pathfinding/GridBase.cs
    startLine: 48
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Pathfinding
  syntax:
    content: public ImmutableList<ObstacleObject> LoadedObstacles { get; }
    parameters: []
    return:
      type: System.Collections.Immutable.ImmutableList{Petrosik.Pathfinding.ObstacleObject}
    content.vb: Public ReadOnly Property LoadedObstacles As ImmutableList(Of ObstacleObject)
  overload: Petrosik.Pathfinding.GridBase.LoadedObstacles*
- uid: Petrosik.Pathfinding.GridBase.AddObstacle(Petrosik.Pathfinding.ObstacleObject)
  commentId: M:Petrosik.Pathfinding.GridBase.AddObstacle(Petrosik.Pathfinding.ObstacleObject)
  id: AddObstacle(Petrosik.Pathfinding.ObstacleObject)
  parent: Petrosik.Pathfinding.GridBase
  langs:
  - csharp
  - vb
  name: AddObstacle(ObstacleObject)
  nameWithType: GridBase.AddObstacle(ObstacleObject)
  fullName: Petrosik.Pathfinding.GridBase.AddObstacle(Petrosik.Pathfinding.ObstacleObject)
  type: Method
  source:
    remote:
      path: Utility/Pathfinding/GridBase.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: AddObstacle
    path: ../Utility/Pathfinding/GridBase.cs
    startLine: 90
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Pathfinding
  summary: Adds obstacle object to the list that creates the grid
  example: []
  syntax:
    content: public void AddObstacle(ObstacleObject Obstacle)
    parameters:
    - id: Obstacle
      type: Petrosik.Pathfinding.ObstacleObject
      description: ''
    content.vb: Public Sub AddObstacle(Obstacle As ObstacleObject)
  overload: Petrosik.Pathfinding.GridBase.AddObstacle*
- uid: Petrosik.Pathfinding.GridBase.RemoveObstacle(Petrosik.Pathfinding.ObstacleObject)
  commentId: M:Petrosik.Pathfinding.GridBase.RemoveObstacle(Petrosik.Pathfinding.ObstacleObject)
  id: RemoveObstacle(Petrosik.Pathfinding.ObstacleObject)
  parent: Petrosik.Pathfinding.GridBase
  langs:
  - csharp
  - vb
  name: RemoveObstacle(ObstacleObject)
  nameWithType: GridBase.RemoveObstacle(ObstacleObject)
  fullName: Petrosik.Pathfinding.GridBase.RemoveObstacle(Petrosik.Pathfinding.ObstacleObject)
  type: Method
  source:
    remote:
      path: Utility/Pathfinding/GridBase.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: RemoveObstacle
    path: ../Utility/Pathfinding/GridBase.cs
    startLine: 102
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Pathfinding
  summary: Removes obstacle object from the list that creates the grid
  example: []
  syntax:
    content: public void RemoveObstacle(ObstacleObject Obstacle)
    parameters:
    - id: Obstacle
      type: Petrosik.Pathfinding.ObstacleObject
      description: ''
    content.vb: Public Sub RemoveObstacle(Obstacle As ObstacleObject)
  overload: Petrosik.Pathfinding.GridBase.RemoveObstacle*
- uid: Petrosik.Pathfinding.GridBase.RemoveObstacleAt(System.Int32)
  commentId: M:Petrosik.Pathfinding.GridBase.RemoveObstacleAt(System.Int32)
  id: RemoveObstacleAt(System.Int32)
  parent: Petrosik.Pathfinding.GridBase
  langs:
  - csharp
  - vb
  name: RemoveObstacleAt(int)
  nameWithType: GridBase.RemoveObstacleAt(int)
  fullName: Petrosik.Pathfinding.GridBase.RemoveObstacleAt(int)
  type: Method
  source:
    remote:
      path: Utility/Pathfinding/GridBase.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: RemoveObstacleAt
    path: ../Utility/Pathfinding/GridBase.cs
    startLine: 111
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Pathfinding
  summary: Removes obstacle object at position on the list that creates the grid
  example: []
  syntax:
    content: public void RemoveObstacleAt(int Index)
    parameters:
    - id: Index
      type: System.Int32
      description: ''
    content.vb: Public Sub RemoveObstacleAt(Index As Integer)
  overload: Petrosik.Pathfinding.GridBase.RemoveObstacleAt*
  nameWithType.vb: GridBase.RemoveObstacleAt(Integer)
  fullName.vb: Petrosik.Pathfinding.GridBase.RemoveObstacleAt(Integer)
  name.vb: RemoveObstacleAt(Integer)
- uid: Petrosik.Pathfinding.GridBase.ClearObstalces
  commentId: M:Petrosik.Pathfinding.GridBase.ClearObstalces
  id: ClearObstalces
  parent: Petrosik.Pathfinding.GridBase
  langs:
  - csharp
  - vb
  name: ClearObstalces()
  nameWithType: GridBase.ClearObstalces()
  fullName: Petrosik.Pathfinding.GridBase.ClearObstalces()
  type: Method
  source:
    remote:
      path: Utility/Pathfinding/GridBase.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: ClearObstalces
    path: ../Utility/Pathfinding/GridBase.cs
    startLine: 121
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Pathfinding
  summary: >-
    Clears all obstacles

    <p>Also removes what you set as BaseClearArea when creating this GridBase</p>
  example: []
  syntax:
    content: public void ClearObstalces()
    content.vb: Public Sub ClearObstalces()
  overload: Petrosik.Pathfinding.GridBase.ClearObstalces*
- uid: Petrosik.Pathfinding.GridBase.MoveObstalce(System.Int32,System.Int32)
  commentId: M:Petrosik.Pathfinding.GridBase.MoveObstalce(System.Int32,System.Int32)
  id: MoveObstalce(System.Int32,System.Int32)
  parent: Petrosik.Pathfinding.GridBase
  langs:
  - csharp
  - vb
  name: MoveObstalce(int, int)
  nameWithType: GridBase.MoveObstalce(int, int)
  fullName: Petrosik.Pathfinding.GridBase.MoveObstalce(int, int)
  type: Method
  source:
    remote:
      path: Utility/Pathfinding/GridBase.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: MoveObstalce
    path: ../Utility/Pathfinding/GridBase.cs
    startLine: 133
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Pathfinding
  summary: Moves obstacle on <code class="paramref">Index</code> Up or Down in the list based on <code class="paramref">Offset</code>
  example: []
  syntax:
    content: public void MoveObstalce(int Index, int Offset = 1)
    parameters:
    - id: Index
      type: System.Int32
      description: ''
    - id: Offset
      type: System.Int32
      description: + Moves Down, - Moves Up
    content.vb: Public Sub MoveObstalce(Index As Integer, Offset As Integer = 1)
  overload: Petrosik.Pathfinding.GridBase.MoveObstalce*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: Occurs when Index + Offset is outside of range of the obstacle list
  nameWithType.vb: GridBase.MoveObstalce(Integer, Integer)
  fullName.vb: Petrosik.Pathfinding.GridBase.MoveObstalce(Integer, Integer)
  name.vb: MoveObstalce(Integer, Integer)
- uid: Petrosik.Pathfinding.GridBase.AddSingle(System.Int32,System.Int32,Petrosik.Enums.PathOccupancy)
  commentId: M:Petrosik.Pathfinding.GridBase.AddSingle(System.Int32,System.Int32,Petrosik.Enums.PathOccupancy)
  id: AddSingle(System.Int32,System.Int32,Petrosik.Enums.PathOccupancy)
  parent: Petrosik.Pathfinding.GridBase
  langs:
  - csharp
  - vb
  name: AddSingle(int, int, PathOccupancy)
  nameWithType: GridBase.AddSingle(int, int, PathOccupancy)
  fullName: Petrosik.Pathfinding.GridBase.AddSingle(int, int, Petrosik.Enums.PathOccupancy)
  type: Method
  source:
    remote:
      path: Utility/Pathfinding/GridBase.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: AddSingle
    path: ../Utility/Pathfinding/GridBase.cs
    startLine: 150
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Pathfinding
  summary: >-
    Adds single pixel worth obstacle

    <p>Use Sparingly, will slow down grid building</p>
  example: []
  syntax:
    content: public void AddSingle(int X, int Y, PathOccupancy Type)
    parameters:
    - id: X
      type: System.Int32
      description: ''
    - id: Y
      type: System.Int32
      description: ''
    - id: Type
      type: Petrosik.Enums.PathOccupancy
      description: ''
    content.vb: Public Sub AddSingle(X As Integer, Y As Integer, Type As PathOccupancy)
  overload: Petrosik.Pathfinding.GridBase.AddSingle*
  nameWithType.vb: GridBase.AddSingle(Integer, Integer, PathOccupancy)
  fullName.vb: Petrosik.Pathfinding.GridBase.AddSingle(Integer, Integer, Petrosik.Enums.PathOccupancy)
  name.vb: AddSingle(Integer, Integer, PathOccupancy)
- uid: Petrosik.Pathfinding.GridBase.GetPathColor(Petrosik.Enums.PathOccupancy)
  commentId: M:Petrosik.Pathfinding.GridBase.GetPathColor(Petrosik.Enums.PathOccupancy)
  id: GetPathColor(Petrosik.Enums.PathOccupancy)
  parent: Petrosik.Pathfinding.GridBase
  langs:
  - csharp
  - vb
  name: GetPathColor(PathOccupancy)
  nameWithType: GridBase.GetPathColor(PathOccupancy)
  fullName: Petrosik.Pathfinding.GridBase.GetPathColor(Petrosik.Enums.PathOccupancy)
  type: Method
  source:
    remote:
      path: Utility/Pathfinding/GridBase.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: GetPathColor
    path: ../Utility/Pathfinding/GridBase.cs
    startLine: 169
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Pathfinding
  summary: Returns color interpretation of the tile
  example: []
  syntax:
    content: public Color GetPathColor(PathOccupancy Tile)
    parameters:
    - id: Tile
      type: Petrosik.Enums.PathOccupancy
      description: ''
    return:
      type: System.Drawing.Color
      description: ''
    content.vb: Public Function GetPathColor(Tile As PathOccupancy) As Color
  overload: Petrosik.Pathfinding.GridBase.GetPathColor*
- uid: Petrosik.Pathfinding.GridBase.GetGridPosition(System.Drawing.PointF)
  commentId: M:Petrosik.Pathfinding.GridBase.GetGridPosition(System.Drawing.PointF)
  id: GetGridPosition(System.Drawing.PointF)
  parent: Petrosik.Pathfinding.GridBase
  langs:
  - csharp
  - vb
  name: GetGridPosition(PointF)
  nameWithType: GridBase.GetGridPosition(PointF)
  fullName: Petrosik.Pathfinding.GridBase.GetGridPosition(System.Drawing.PointF)
  type: Method
  source:
    remote:
      path: Utility/Pathfinding/GridBase.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: GetGridPosition
    path: ../Utility/Pathfinding/GridBase.cs
    startLine: 192
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Pathfinding
  summary: Returns position on the grid from world position
  example: []
  syntax:
    content: public PointF GetGridPosition(PointF Pos)
    parameters:
    - id: Pos
      type: System.Drawing.PointF
      description: ''
    return:
      type: System.Drawing.PointF
      description: ''
    content.vb: Public Function GetGridPosition(Pos As PointF) As PointF
  overload: Petrosik.Pathfinding.GridBase.GetGridPosition*
- uid: Petrosik.Pathfinding.GridBase.GetWorldPosition(System.Drawing.PointF)
  commentId: M:Petrosik.Pathfinding.GridBase.GetWorldPosition(System.Drawing.PointF)
  id: GetWorldPosition(System.Drawing.PointF)
  parent: Petrosik.Pathfinding.GridBase
  langs:
  - csharp
  - vb
  name: GetWorldPosition(PointF)
  nameWithType: GridBase.GetWorldPosition(PointF)
  fullName: Petrosik.Pathfinding.GridBase.GetWorldPosition(System.Drawing.PointF)
  type: Method
  source:
    remote:
      path: Utility/Pathfinding/GridBase.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: GetWorldPosition
    path: ../Utility/Pathfinding/GridBase.cs
    startLine: 201
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Pathfinding
  summary: Returns position in world from grid position
  example: []
  syntax:
    content: public PointF GetWorldPosition(PointF Pos)
    parameters:
    - id: Pos
      type: System.Drawing.PointF
      description: ''
    return:
      type: System.Drawing.PointF
      description: ''
    content.vb: Public Function GetWorldPosition(Pos As PointF) As PointF
  overload: Petrosik.Pathfinding.GridBase.GetWorldPosition*
- uid: Petrosik.Pathfinding.GridBase.ExportPaths
  commentId: M:Petrosik.Pathfinding.GridBase.ExportPaths
  id: ExportPaths
  parent: Petrosik.Pathfinding.GridBase
  langs:
  - csharp
  - vb
  name: ExportPaths()
  nameWithType: GridBase.ExportPaths()
  fullName: Petrosik.Pathfinding.GridBase.ExportPaths()
  type: Method
  source:
    remote:
      path: Utility/Pathfinding/GridBase.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: ExportPaths
    path: ../Utility/Pathfinding/GridBase.cs
    startLine: 209
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Pathfinding
  summary: Exports Obstacles into Json format
  example: []
  syntax:
    content: public string ExportPaths()
    return:
      type: System.String
      description: ''
    content.vb: Public Function ExportPaths() As String
  overload: Petrosik.Pathfinding.GridBase.ExportPaths*
- uid: Petrosik.Pathfinding.GridBase.InportPaths(System.String)
  commentId: M:Petrosik.Pathfinding.GridBase.InportPaths(System.String)
  id: InportPaths(System.String)
  parent: Petrosik.Pathfinding.GridBase
  langs:
  - csharp
  - vb
  name: InportPaths(string)
  nameWithType: GridBase.InportPaths(string)
  fullName: Petrosik.Pathfinding.GridBase.InportPaths(string)
  type: Method
  source:
    remote:
      path: Utility/Pathfinding/GridBase.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: InportPaths
    path: ../Utility/Pathfinding/GridBase.cs
    startLine: 223
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Pathfinding
  summary: Inports Obstacles from Json text
  example: []
  syntax:
    content: public void InportPaths(string text)
    parameters:
    - id: text
      type: System.String
      description: ''
    content.vb: Public Sub InportPaths(text As String)
  overload: Petrosik.Pathfinding.GridBase.InportPaths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Happens when text is not Json format
  nameWithType.vb: GridBase.InportPaths(String)
  fullName.vb: Petrosik.Pathfinding.GridBase.InportPaths(String)
  name.vb: InportPaths(String)
- uid: Petrosik.Pathfinding.GridBase.GetPath(System.Drawing.PointF,System.Drawing.PointF,System.Single)
  commentId: M:Petrosik.Pathfinding.GridBase.GetPath(System.Drawing.PointF,System.Drawing.PointF,System.Single)
  id: GetPath(System.Drawing.PointF,System.Drawing.PointF,System.Single)
  parent: Petrosik.Pathfinding.GridBase
  langs:
  - csharp
  - vb
  name: GetPath(PointF, PointF, float)
  nameWithType: GridBase.GetPath(PointF, PointF, float)
  fullName: Petrosik.Pathfinding.GridBase.GetPath(System.Drawing.PointF, System.Drawing.PointF, float)
  type: Method
  source:
    remote:
      path: Utility/Pathfinding/GridBase.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: GetPath
    path: ../Utility/Pathfinding/GridBase.cs
    startLine: 244
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Pathfinding
  summary: Returns List of coordinates for path to target, searchrange is
  example: []
  syntax:
    content: public virtual List<PointF>? GetPath(PointF From, PointF To, float SearchRange = 0)
    parameters:
    - id: From
      type: System.Drawing.PointF
      description: World's Units
    - id: To
      type: System.Drawing.PointF
      description: World's Units
    - id: SearchRange
      type: System.Single
      description: How far to search in world's units (0 for default limit)
    return:
      type: System.Collections.Generic.List{System.Drawing.PointF}
      description: ''
    content.vb: Public Overridable Function GetPath(From As PointF, [To] As PointF, SearchRange As Single = 0) As List(Of PointF)
  overload: Petrosik.Pathfinding.GridBase.GetPath*
  nameWithType.vb: GridBase.GetPath(PointF, PointF, Single)
  fullName.vb: Petrosik.Pathfinding.GridBase.GetPath(System.Drawing.PointF, System.Drawing.PointF, Single)
  name.vb: GetPath(PointF, PointF, Single)
- uid: Petrosik.Pathfinding.GridBase.GetRawPath(System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Boolean)
  commentId: M:Petrosik.Pathfinding.GridBase.GetRawPath(System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Boolean)
  id: GetRawPath(System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Boolean)
  parent: Petrosik.Pathfinding.GridBase
  langs:
  - csharp
  - vb
  name: GetRawPath(PointF, PointF, float, bool)
  nameWithType: GridBase.GetRawPath(PointF, PointF, float, bool)
  fullName: Petrosik.Pathfinding.GridBase.GetRawPath(System.Drawing.PointF, System.Drawing.PointF, float, bool)
  type: Method
  source:
    remote:
      path: Utility/Pathfinding/GridBase.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: GetRawPath
    path: ../Utility/Pathfinding/GridBase.cs
    startLine: 256
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Pathfinding
  summary: Simple Raw Pathing method
  example: []
  syntax:
    content: public virtual LinkedList<PointF>? GetRawPath(PointF From, PointF To, float SearchRange = 0, bool WorldSpace = true)
    parameters:
    - id: From
      type: System.Drawing.PointF
      description: World's Units
    - id: To
      type: System.Drawing.PointF
      description: World's Units
    - id: SearchRange
      type: System.Single
      description: How far to search in world's units (0 for default limit)
    - id: WorldSpace
      type: System.Boolean
      description: Should the positions be converted to world positions
    return:
      type: System.Collections.Generic.LinkedList{System.Drawing.PointF}
      description: ''
    content.vb: Public Overridable Function GetRawPath(From As PointF, [To] As PointF, SearchRange As Single = 0, WorldSpace As Boolean = True) As LinkedList(Of PointF)
  overload: Petrosik.Pathfinding.GridBase.GetRawPath*
  nameWithType.vb: GridBase.GetRawPath(PointF, PointF, Single, Boolean)
  fullName.vb: Petrosik.Pathfinding.GridBase.GetRawPath(System.Drawing.PointF, System.Drawing.PointF, Single, Boolean)
  name.vb: GetRawPath(PointF, PointF, Single, Boolean)
references:
- uid: Petrosik.Pathfinding
  commentId: N:Petrosik.Pathfinding
  href: Petrosik.html
  name: Petrosik.Pathfinding
  nameWithType: Petrosik.Pathfinding
  fullName: Petrosik.Pathfinding
  spec.csharp:
  - uid: Petrosik
    name: Petrosik
    href: Petrosik.html
  - name: .
  - uid: Petrosik.Pathfinding
    name: Pathfinding
    href: Petrosik.Pathfinding.html
  spec.vb:
  - uid: Petrosik
    name: Petrosik
    href: Petrosik.html
  - name: .
  - uid: Petrosik.Pathfinding
    name: Pathfinding
    href: Petrosik.Pathfinding.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Petrosik.UnityUtility.Extensions.IsUnityNull
  commentId: M:Petrosik.UnityUtility.Extensions.IsUnityNull(System.Object)
  parent: Petrosik.UnityUtility.Extensions
  definition: Petrosik.UnityUtility.Extensions.IsUnityNull(System.Object)
  href: Petrosik.UnityUtility.Extensions.html#Petrosik_UnityUtility_Extensions_IsUnityNull_System_Object_
  name: IsUnityNull(object)
  nameWithType: Extensions.IsUnityNull(object)
  fullName: Petrosik.UnityUtility.Extensions.IsUnityNull(object)
  nameWithType.vb: Extensions.IsUnityNull(Object)
  fullName.vb: Petrosik.UnityUtility.Extensions.IsUnityNull(Object)
  name.vb: IsUnityNull(Object)
  spec.csharp:
  - uid: Petrosik.UnityUtility.Extensions.IsUnityNull(System.Object)
    name: IsUnityNull
    href: Petrosik.UnityUtility.Extensions.html#Petrosik_UnityUtility_Extensions_IsUnityNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Petrosik.UnityUtility.Extensions.IsUnityNull(System.Object)
    name: IsUnityNull
    href: Petrosik.UnityUtility.Extensions.html#Petrosik_UnityUtility_Extensions_IsUnityNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Petrosik.UnityUtility.Extensions.IsUnityNull(System.Object)
  commentId: M:Petrosik.UnityUtility.Extensions.IsUnityNull(System.Object)
  isExternal: true
  href: Petrosik.UnityUtility.Extensions.html#Petrosik_UnityUtility_Extensions_IsUnityNull_System_Object_
  name: IsUnityNull(object)
  nameWithType: Extensions.IsUnityNull(object)
  fullName: Petrosik.UnityUtility.Extensions.IsUnityNull(object)
  nameWithType.vb: Extensions.IsUnityNull(Object)
  fullName.vb: Petrosik.UnityUtility.Extensions.IsUnityNull(Object)
  name.vb: IsUnityNull(Object)
  spec.csharp:
  - uid: Petrosik.UnityUtility.Extensions.IsUnityNull(System.Object)
    name: IsUnityNull
    href: Petrosik.UnityUtility.Extensions.html#Petrosik_UnityUtility_Extensions_IsUnityNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Petrosik.UnityUtility.Extensions.IsUnityNull(System.Object)
    name: IsUnityNull
    href: Petrosik.UnityUtility.Extensions.html#Petrosik_UnityUtility_Extensions_IsUnityNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Petrosik.UnityUtility.Extensions
  commentId: T:Petrosik.UnityUtility.Extensions
  parent: Petrosik.UnityUtility
  href: Petrosik.UnityUtility.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Petrosik.UnityUtility.Extensions
- uid: Petrosik.UnityUtility
  commentId: N:Petrosik.UnityUtility
  href: Petrosik.html
  name: Petrosik.UnityUtility
  nameWithType: Petrosik.UnityUtility
  fullName: Petrosik.UnityUtility
  spec.csharp:
  - uid: Petrosik
    name: Petrosik
    href: Petrosik.html
  - name: .
  - uid: Petrosik.UnityUtility
    name: UnityUtility
    href: Petrosik.UnityUtility.html
  spec.vb:
  - uid: Petrosik
    name: Petrosik
    href: Petrosik.html
  - name: .
  - uid: Petrosik.UnityUtility
    name: UnityUtility
    href: Petrosik.UnityUtility.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Petrosik.Pathfinding.GridBase.GridSize*
  commentId: Overload:Petrosik.Pathfinding.GridBase.GridSize
  href: Petrosik.Pathfinding.GridBase.html#Petrosik_Pathfinding_GridBase_GridSize
  name: GridSize
  nameWithType: GridBase.GridSize
  fullName: Petrosik.Pathfinding.GridBase.GridSize
- uid: System.Drawing.Size
  commentId: T:System.Drawing.Size
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.size
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing
  commentId: N:System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Drawing
  nameWithType: System.Drawing
  fullName: System.Drawing
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
- uid: Petrosik.Enums.PathOccupancy[,]
  isExternal: true
  href: Petrosik.Enums.PathOccupancy.html
  name: PathOccupancy[,]
  nameWithType: PathOccupancy[,]
  fullName: Petrosik.Enums.PathOccupancy[,]
  nameWithType.vb: PathOccupancy(,)
  fullName.vb: Petrosik.Enums.PathOccupancy(,)
  name.vb: PathOccupancy(,)
  spec.csharp:
  - uid: Petrosik.Enums.PathOccupancy
    name: PathOccupancy
    href: Petrosik.Enums.PathOccupancy.html
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: Petrosik.Enums.PathOccupancy
    name: PathOccupancy
    href: Petrosik.Enums.PathOccupancy.html
  - name: (
  - name: ','
  - name: )
- uid: Petrosik.Pathfinding.GridBase.LoadedObstacles*
  commentId: Overload:Petrosik.Pathfinding.GridBase.LoadedObstacles
  href: Petrosik.Pathfinding.GridBase.html#Petrosik_Pathfinding_GridBase_LoadedObstacles
  name: LoadedObstacles
  nameWithType: GridBase.LoadedObstacles
  fullName: Petrosik.Pathfinding.GridBase.LoadedObstacles
- uid: System.Collections.Immutable.ImmutableList{Petrosik.Pathfinding.ObstacleObject}
  commentId: T:System.Collections.Immutable.ImmutableList{Petrosik.Pathfinding.ObstacleObject}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
  name: ImmutableList<ObstacleObject>
  nameWithType: ImmutableList<ObstacleObject>
  fullName: System.Collections.Immutable.ImmutableList<Petrosik.Pathfinding.ObstacleObject>
  nameWithType.vb: ImmutableList(Of ObstacleObject)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of Petrosik.Pathfinding.ObstacleObject)
  name.vb: ImmutableList(Of ObstacleObject)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableList`1
    name: ImmutableList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
  - name: <
  - uid: Petrosik.Pathfinding.ObstacleObject
    name: ObstacleObject
    href: Petrosik.Pathfinding.ObstacleObject.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableList`1
    name: ImmutableList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Petrosik.Pathfinding.ObstacleObject
    name: ObstacleObject
    href: Petrosik.Pathfinding.ObstacleObject.html
  - name: )
- uid: System.Collections.Immutable.ImmutableList`1
  commentId: T:System.Collections.Immutable.ImmutableList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
  name: ImmutableList<T>
  nameWithType: ImmutableList<T>
  fullName: System.Collections.Immutable.ImmutableList<T>
  nameWithType.vb: ImmutableList(Of T)
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T)
  name.vb: ImmutableList(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableList`1
    name: ImmutableList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableList`1
    name: ImmutableList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Immutable
  commentId: N:System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Immutable
  nameWithType: System.Collections.Immutable
  fullName: System.Collections.Immutable
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
- uid: Petrosik.Pathfinding.GridBase.AddObstacle*
  commentId: Overload:Petrosik.Pathfinding.GridBase.AddObstacle
  href: Petrosik.Pathfinding.GridBase.html#Petrosik_Pathfinding_GridBase_AddObstacle_Petrosik_Pathfinding_ObstacleObject_
  name: AddObstacle
  nameWithType: GridBase.AddObstacle
  fullName: Petrosik.Pathfinding.GridBase.AddObstacle
- uid: Petrosik.Pathfinding.ObstacleObject
  commentId: T:Petrosik.Pathfinding.ObstacleObject
  parent: Petrosik.Pathfinding
  href: Petrosik.Pathfinding.ObstacleObject.html
  name: ObstacleObject
  nameWithType: ObstacleObject
  fullName: Petrosik.Pathfinding.ObstacleObject
- uid: Petrosik.Pathfinding.GridBase.RemoveObstacle*
  commentId: Overload:Petrosik.Pathfinding.GridBase.RemoveObstacle
  href: Petrosik.Pathfinding.GridBase.html#Petrosik_Pathfinding_GridBase_RemoveObstacle_Petrosik_Pathfinding_ObstacleObject_
  name: RemoveObstacle
  nameWithType: GridBase.RemoveObstacle
  fullName: Petrosik.Pathfinding.GridBase.RemoveObstacle
- uid: Petrosik.Pathfinding.GridBase.RemoveObstacleAt*
  commentId: Overload:Petrosik.Pathfinding.GridBase.RemoveObstacleAt
  href: Petrosik.Pathfinding.GridBase.html#Petrosik_Pathfinding_GridBase_RemoveObstacleAt_System_Int32_
  name: RemoveObstacleAt
  nameWithType: GridBase.RemoveObstacleAt
  fullName: Petrosik.Pathfinding.GridBase.RemoveObstacleAt
- uid: Petrosik.Pathfinding.GridBase.ClearObstalces*
  commentId: Overload:Petrosik.Pathfinding.GridBase.ClearObstalces
  href: Petrosik.Pathfinding.GridBase.html#Petrosik_Pathfinding_GridBase_ClearObstalces
  name: ClearObstalces
  nameWithType: GridBase.ClearObstalces
  fullName: Petrosik.Pathfinding.GridBase.ClearObstalces
- uid: System.IndexOutOfRangeException
  commentId: T:System.IndexOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.indexoutofrangeexception
  name: IndexOutOfRangeException
  nameWithType: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
- uid: Petrosik.Pathfinding.GridBase.MoveObstalce*
  commentId: Overload:Petrosik.Pathfinding.GridBase.MoveObstalce
  href: Petrosik.Pathfinding.GridBase.html#Petrosik_Pathfinding_GridBase_MoveObstalce_System_Int32_System_Int32_
  name: MoveObstalce
  nameWithType: GridBase.MoveObstalce
  fullName: Petrosik.Pathfinding.GridBase.MoveObstalce
- uid: Petrosik.Pathfinding.GridBase.AddSingle*
  commentId: Overload:Petrosik.Pathfinding.GridBase.AddSingle
  href: Petrosik.Pathfinding.GridBase.html#Petrosik_Pathfinding_GridBase_AddSingle_System_Int32_System_Int32_Petrosik_Enums_PathOccupancy_
  name: AddSingle
  nameWithType: GridBase.AddSingle
  fullName: Petrosik.Pathfinding.GridBase.AddSingle
- uid: Petrosik.Enums.PathOccupancy
  commentId: T:Petrosik.Enums.PathOccupancy
  parent: Petrosik.Enums
  href: Petrosik.Enums.PathOccupancy.html
  name: PathOccupancy
  nameWithType: PathOccupancy
  fullName: Petrosik.Enums.PathOccupancy
- uid: Petrosik.Enums
  commentId: N:Petrosik.Enums
  href: Petrosik.html
  name: Petrosik.Enums
  nameWithType: Petrosik.Enums
  fullName: Petrosik.Enums
  spec.csharp:
  - uid: Petrosik
    name: Petrosik
    href: Petrosik.html
  - name: .
  - uid: Petrosik.Enums
    name: Enums
    href: Petrosik.Enums.html
  spec.vb:
  - uid: Petrosik
    name: Petrosik
    href: Petrosik.html
  - name: .
  - uid: Petrosik.Enums
    name: Enums
    href: Petrosik.Enums.html
- uid: Petrosik.Pathfinding.GridBase.GetPathColor*
  commentId: Overload:Petrosik.Pathfinding.GridBase.GetPathColor
  href: Petrosik.Pathfinding.GridBase.html#Petrosik_Pathfinding_GridBase_GetPathColor_Petrosik_Enums_PathOccupancy_
  name: GetPathColor
  nameWithType: GridBase.GetPathColor
  fullName: Petrosik.Pathfinding.GridBase.GetPathColor
- uid: System.Drawing.Color
  commentId: T:System.Drawing.Color
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.color
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: Petrosik.Pathfinding.GridBase.GetGridPosition*
  commentId: Overload:Petrosik.Pathfinding.GridBase.GetGridPosition
  href: Petrosik.Pathfinding.GridBase.html#Petrosik_Pathfinding_GridBase_GetGridPosition_System_Drawing_PointF_
  name: GetGridPosition
  nameWithType: GridBase.GetGridPosition
  fullName: Petrosik.Pathfinding.GridBase.GetGridPosition
- uid: System.Drawing.PointF
  commentId: T:System.Drawing.PointF
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.pointf
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: Petrosik.Pathfinding.GridBase.GetWorldPosition*
  commentId: Overload:Petrosik.Pathfinding.GridBase.GetWorldPosition
  href: Petrosik.Pathfinding.GridBase.html#Petrosik_Pathfinding_GridBase_GetWorldPosition_System_Drawing_PointF_
  name: GetWorldPosition
  nameWithType: GridBase.GetWorldPosition
  fullName: Petrosik.Pathfinding.GridBase.GetWorldPosition
- uid: Petrosik.Pathfinding.GridBase.ExportPaths*
  commentId: Overload:Petrosik.Pathfinding.GridBase.ExportPaths
  href: Petrosik.Pathfinding.GridBase.html#Petrosik_Pathfinding_GridBase_ExportPaths
  name: ExportPaths
  nameWithType: GridBase.ExportPaths
  fullName: Petrosik.Pathfinding.GridBase.ExportPaths
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: Petrosik.Pathfinding.GridBase.InportPaths*
  commentId: Overload:Petrosik.Pathfinding.GridBase.InportPaths
  href: Petrosik.Pathfinding.GridBase.html#Petrosik_Pathfinding_GridBase_InportPaths_System_String_
  name: InportPaths
  nameWithType: GridBase.InportPaths
  fullName: Petrosik.Pathfinding.GridBase.InportPaths
- uid: Petrosik.Pathfinding.GridBase.GetPath*
  commentId: Overload:Petrosik.Pathfinding.GridBase.GetPath
  href: Petrosik.Pathfinding.GridBase.html#Petrosik_Pathfinding_GridBase_GetPath_System_Drawing_PointF_System_Drawing_PointF_System_Single_
  name: GetPath
  nameWithType: GridBase.GetPath
  fullName: Petrosik.Pathfinding.GridBase.GetPath
- uid: System.Collections.Generic.List{System.Drawing.PointF}
  commentId: T:System.Collections.Generic.List{System.Drawing.PointF}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<PointF>
  nameWithType: List<PointF>
  fullName: System.Collections.Generic.List<System.Drawing.PointF>
  nameWithType.vb: List(Of PointF)
  fullName.vb: System.Collections.Generic.List(Of System.Drawing.PointF)
  name.vb: List(Of PointF)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Drawing.PointF
    name: PointF
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing.pointf
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Drawing.PointF
    name: PointF
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing.pointf
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Petrosik.Pathfinding.GridBase.GetRawPath*
  commentId: Overload:Petrosik.Pathfinding.GridBase.GetRawPath
  href: Petrosik.Pathfinding.GridBase.html#Petrosik_Pathfinding_GridBase_GetRawPath_System_Drawing_PointF_System_Drawing_PointF_System_Single_System_Boolean_
  name: GetRawPath
  nameWithType: GridBase.GetRawPath
  fullName: Petrosik.Pathfinding.GridBase.GetRawPath
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.LinkedList{System.Drawing.PointF}
  commentId: T:System.Collections.Generic.LinkedList{System.Drawing.PointF}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.LinkedList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1
  name: LinkedList<PointF>
  nameWithType: LinkedList<PointF>
  fullName: System.Collections.Generic.LinkedList<System.Drawing.PointF>
  nameWithType.vb: LinkedList(Of PointF)
  fullName.vb: System.Collections.Generic.LinkedList(Of System.Drawing.PointF)
  name.vb: LinkedList(Of PointF)
  spec.csharp:
  - uid: System.Collections.Generic.LinkedList`1
    name: LinkedList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1
  - name: <
  - uid: System.Drawing.PointF
    name: PointF
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing.pointf
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.LinkedList`1
    name: LinkedList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Drawing.PointF
    name: PointF
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing.pointf
  - name: )
- uid: System.Collections.Generic.LinkedList`1
  commentId: T:System.Collections.Generic.LinkedList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1
  name: LinkedList<T>
  nameWithType: LinkedList<T>
  fullName: System.Collections.Generic.LinkedList<T>
  nameWithType.vb: LinkedList(Of T)
  fullName.vb: System.Collections.Generic.LinkedList(Of T)
  name.vb: LinkedList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.LinkedList`1
    name: LinkedList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.LinkedList`1
    name: LinkedList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
