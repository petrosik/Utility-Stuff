### YamlMime:ManagedReference
items:
- uid: Petrosik.Utility.Extensions
  commentId: T:Petrosik.Utility.Extensions
  id: Extensions
  parent: Petrosik.Utility
  children:
  - Petrosik.Utility.Extensions.Abs(System.Drawing.PointF)
  - Petrosik.Utility.Extensions.Ceiling(System.Drawing.PointF)
  - Petrosik.Utility.Extensions.Direction(System.Drawing.PointF,System.Drawing.PointF)
  - Petrosik.Utility.Extensions.Distance(System.Drawing.PointF,System.Drawing.PointF)
  - Petrosik.Utility.Extensions.Floor(System.Drawing.PointF)
  - Petrosik.Utility.Extensions.Merge(System.Byte[][])
  - Petrosik.Utility.Extensions.Normalize(System.Drawing.PointF)
  - Petrosik.Utility.Extensions.Normalize(System.Single,System.Single,System.Single)
  - Petrosik.Utility.Extensions.Rotate(System.Drawing.PointF,System.Single)
  - Petrosik.Utility.Extensions.Round(System.Drawing.PointF,System.Int32)
  - Petrosik.Utility.Extensions.Split(System.Byte[],System.Int32)
  - Petrosik.Utility.Extensions.Sum(System.Drawing.PointF)
  - Petrosik.Utility.Extensions.ToShortString(System.Numerics.BigInteger,System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: Extensions
  fullName: Petrosik.Utility.Extensions
  type: Class
  source:
    remote:
      path: Utility/Utility.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: Extensions
    path: ../Utility/Utility.cs
    startLine: 380
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: All basic Modifications/Extensions
  example: []
  syntax:
    content: public static class Extensions
    content.vb: Public Module Extensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Petrosik.Utility.Extensions.Rotate(System.Drawing.PointF,System.Single)
  commentId: M:Petrosik.Utility.Extensions.Rotate(System.Drawing.PointF,System.Single)
  id: Rotate(System.Drawing.PointF,System.Single)
  isExtensionMethod: true
  parent: Petrosik.Utility.Extensions
  langs:
  - csharp
  - vb
  name: Rotate(PointF, float)
  nameWithType: Extensions.Rotate(PointF, float)
  fullName: Petrosik.Utility.Extensions.Rotate(System.Drawing.PointF, float)
  type: Method
  source:
    remote:
      path: Utility/Utility.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: Rotate
    path: ../Utility/Utility.cs
    startLine: 388
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: Rotates and returns vector by set amount of degres
  example: []
  syntax:
    content: public static PointF Rotate(this PointF v, float delta)
    parameters:
    - id: v
      type: System.Drawing.PointF
      description: Original Point
    - id: delta
      type: System.Single
      description: Degres
    return:
      type: System.Drawing.PointF
      description: ''
    content.vb: Public Shared Function Rotate(v As PointF, delta As Single) As PointF
  overload: Petrosik.Utility.Extensions.Rotate*
  nameWithType.vb: Extensions.Rotate(PointF, Single)
  fullName.vb: Petrosik.Utility.Extensions.Rotate(System.Drawing.PointF, Single)
  name.vb: Rotate(PointF, Single)
- uid: Petrosik.Utility.Extensions.Direction(System.Drawing.PointF,System.Drawing.PointF)
  commentId: M:Petrosik.Utility.Extensions.Direction(System.Drawing.PointF,System.Drawing.PointF)
  id: Direction(System.Drawing.PointF,System.Drawing.PointF)
  isExtensionMethod: true
  parent: Petrosik.Utility.Extensions
  langs:
  - csharp
  - vb
  name: Direction(PointF, PointF)
  nameWithType: Extensions.Direction(PointF, PointF)
  fullName: Petrosik.Utility.Extensions.Direction(System.Drawing.PointF, System.Drawing.PointF)
  type: Method
  source:
    remote:
      path: Utility/Utility.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: Direction
    path: ../Utility/Utility.cs
    startLine: 399
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: Returns direction from v1 to v2 normalized
  example: []
  syntax:
    content: public static PointF Direction(this PointF v1, PointF v2)
    parameters:
    - id: v1
      type: System.Drawing.PointF
      description: ''
    - id: v2
      type: System.Drawing.PointF
      description: ''
    return:
      type: System.Drawing.PointF
      description: ''
    content.vb: Public Shared Function Direction(v1 As PointF, v2 As PointF) As PointF
  overload: Petrosik.Utility.Extensions.Direction*
- uid: Petrosik.Utility.Extensions.Merge(System.Byte[][])
  commentId: M:Petrosik.Utility.Extensions.Merge(System.Byte[][])
  id: Merge(System.Byte[][])
  isExtensionMethod: true
  parent: Petrosik.Utility.Extensions
  langs:
  - csharp
  - vb
  name: Merge(byte[][])
  nameWithType: Extensions.Merge(byte[][])
  fullName: Petrosik.Utility.Extensions.Merge(byte[][])
  type: Method
  source:
    remote:
      path: Utility/Utility.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: Merge
    path: ../Utility/Utility.cs
    startLine: 408
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: Merges Arrays into one
  example: []
  syntax:
    content: public static byte[] Merge(this byte[][] bytes)
    parameters:
    - id: bytes
      type: System.Byte[][]
      description: ''
    return:
      type: System.Byte[]
      description: ''
    content.vb: Public Shared Function Merge(bytes As Byte()()) As Byte()
  overload: Petrosik.Utility.Extensions.Merge*
  nameWithType.vb: Extensions.Merge(Byte()())
  fullName.vb: Petrosik.Utility.Extensions.Merge(Byte()())
  name.vb: Merge(Byte()())
- uid: Petrosik.Utility.Extensions.Split(System.Byte[],System.Int32)
  commentId: M:Petrosik.Utility.Extensions.Split(System.Byte[],System.Int32)
  id: Split(System.Byte[],System.Int32)
  isExtensionMethod: true
  parent: Petrosik.Utility.Extensions
  langs:
  - csharp
  - vb
  name: Split(byte[], int)
  nameWithType: Extensions.Split(byte[], int)
  fullName: Petrosik.Utility.Extensions.Split(byte[], int)
  type: Method
  source:
    remote:
      path: Utility/Utility.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: Split
    path: ../Utility/Utility.cs
    startLine: 434
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: Splits array into multiple arrays by provided chunk size
  example: []
  syntax:
    content: public static byte[][] Split(this byte[] bytes, int chunkSize)
    parameters:
    - id: bytes
      type: System.Byte[]
      description: ''
    - id: chunkSize
      type: System.Int32
      description: ''
    return:
      type: System.Byte[][]
      description: ''
    content.vb: Public Shared Function Split(bytes As Byte(), chunkSize As Integer) As Byte()()
  overload: Petrosik.Utility.Extensions.Split*
  nameWithType.vb: Extensions.Split(Byte(), Integer)
  fullName.vb: Petrosik.Utility.Extensions.Split(Byte(), Integer)
  name.vb: Split(Byte(), Integer)
- uid: Petrosik.Utility.Extensions.Normalize(System.Single,System.Single,System.Single)
  commentId: M:Petrosik.Utility.Extensions.Normalize(System.Single,System.Single,System.Single)
  id: Normalize(System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: Petrosik.Utility.Extensions
  langs:
  - csharp
  - vb
  name: Normalize(float, float, float)
  nameWithType: Extensions.Normalize(float, float, float)
  fullName: Petrosik.Utility.Extensions.Normalize(float, float, float)
  type: Method
  source:
    remote:
      path: Utility/Utility.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: Normalize
    path: ../Utility/Utility.cs
    startLine: 457
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: Scales value between 0 and 1
  example: []
  syntax:
    content: public static float Normalize(this float value, float min_value, float max_value)
    parameters:
    - id: value
      type: System.Single
      description: ''
    - id: min_value
      type: System.Single
      description: ''
    - id: max_value
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function Normalize(value As Single, min_value As Single, max_value As Single) As Single
  overload: Petrosik.Utility.Extensions.Normalize*
  nameWithType.vb: Extensions.Normalize(Single, Single, Single)
  fullName.vb: Petrosik.Utility.Extensions.Normalize(Single, Single, Single)
  name.vb: Normalize(Single, Single, Single)
- uid: Petrosik.Utility.Extensions.Normalize(System.Drawing.PointF)
  commentId: M:Petrosik.Utility.Extensions.Normalize(System.Drawing.PointF)
  id: Normalize(System.Drawing.PointF)
  isExtensionMethod: true
  parent: Petrosik.Utility.Extensions
  langs:
  - csharp
  - vb
  name: Normalize(PointF)
  nameWithType: Extensions.Normalize(PointF)
  fullName: Petrosik.Utility.Extensions.Normalize(System.Drawing.PointF)
  type: Method
  source:
    remote:
      path: Utility/Utility.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: Normalize
    path: ../Utility/Utility.cs
    startLine: 466
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: Normalizes point between 0 and 1
  example: []
  syntax:
    content: public static PointF Normalize(this PointF point)
    parameters:
    - id: point
      type: System.Drawing.PointF
      description: ''
    return:
      type: System.Drawing.PointF
      description: ''
    content.vb: Public Shared Function Normalize(point As PointF) As PointF
  overload: Petrosik.Utility.Extensions.Normalize*
- uid: Petrosik.Utility.Extensions.Abs(System.Drawing.PointF)
  commentId: M:Petrosik.Utility.Extensions.Abs(System.Drawing.PointF)
  id: Abs(System.Drawing.PointF)
  isExtensionMethod: true
  parent: Petrosik.Utility.Extensions
  langs:
  - csharp
  - vb
  name: Abs(PointF)
  nameWithType: Extensions.Abs(PointF)
  fullName: Petrosik.Utility.Extensions.Abs(System.Drawing.PointF)
  type: Method
  source:
    remote:
      path: Utility/Utility.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: Abs
    path: ../Utility/Utility.cs
    startLine: 486
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: Returns abs vector value
  example: []
  syntax:
    content: public static PointF Abs(this PointF v)
    parameters:
    - id: v
      type: System.Drawing.PointF
      description: ''
    return:
      type: System.Drawing.PointF
      description: ''
    content.vb: Public Shared Function Abs(v As PointF) As PointF
  overload: Petrosik.Utility.Extensions.Abs*
- uid: Petrosik.Utility.Extensions.Round(System.Drawing.PointF,System.Int32)
  commentId: M:Petrosik.Utility.Extensions.Round(System.Drawing.PointF,System.Int32)
  id: Round(System.Drawing.PointF,System.Int32)
  isExtensionMethod: true
  parent: Petrosik.Utility.Extensions
  langs:
  - csharp
  - vb
  name: Round(PointF, int)
  nameWithType: Extensions.Round(PointF, int)
  fullName: Petrosik.Utility.Extensions.Round(System.Drawing.PointF, int)
  type: Method
  source:
    remote:
      path: Utility/Utility.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: Round
    path: ../Utility/Utility.cs
    startLine: 496
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: Rounds the numbers to the set of digits
  example: []
  syntax:
    content: public static PointF Round(this PointF v, int digits)
    parameters:
    - id: v
      type: System.Drawing.PointF
      description: ''
    - id: digits
      type: System.Int32
      description: ''
    return:
      type: System.Drawing.PointF
      description: ''
    content.vb: Public Shared Function Round(v As PointF, digits As Integer) As PointF
  overload: Petrosik.Utility.Extensions.Round*
  nameWithType.vb: Extensions.Round(PointF, Integer)
  fullName.vb: Petrosik.Utility.Extensions.Round(System.Drawing.PointF, Integer)
  name.vb: Round(PointF, Integer)
- uid: Petrosik.Utility.Extensions.Floor(System.Drawing.PointF)
  commentId: M:Petrosik.Utility.Extensions.Floor(System.Drawing.PointF)
  id: Floor(System.Drawing.PointF)
  isExtensionMethod: true
  parent: Petrosik.Utility.Extensions
  langs:
  - csharp
  - vb
  name: Floor(PointF)
  nameWithType: Extensions.Floor(PointF)
  fullName: Petrosik.Utility.Extensions.Floor(System.Drawing.PointF)
  type: Method
  source:
    remote:
      path: Utility/Utility.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: Floor
    path: ../Utility/Utility.cs
    startLine: 505
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: Floors the point
  example: []
  syntax:
    content: public static PointF Floor(this PointF v)
    parameters:
    - id: v
      type: System.Drawing.PointF
      description: ''
    return:
      type: System.Drawing.PointF
      description: ''
    content.vb: Public Shared Function Floor(v As PointF) As PointF
  overload: Petrosik.Utility.Extensions.Floor*
- uid: Petrosik.Utility.Extensions.Ceiling(System.Drawing.PointF)
  commentId: M:Petrosik.Utility.Extensions.Ceiling(System.Drawing.PointF)
  id: Ceiling(System.Drawing.PointF)
  isExtensionMethod: true
  parent: Petrosik.Utility.Extensions
  langs:
  - csharp
  - vb
  name: Ceiling(PointF)
  nameWithType: Extensions.Ceiling(PointF)
  fullName: Petrosik.Utility.Extensions.Ceiling(System.Drawing.PointF)
  type: Method
  source:
    remote:
      path: Utility/Utility.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: Ceiling
    path: ../Utility/Utility.cs
    startLine: 514
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: ''
  example: []
  syntax:
    content: public static PointF Ceiling(this PointF v)
    parameters:
    - id: v
      type: System.Drawing.PointF
      description: ''
    return:
      type: System.Drawing.PointF
      description: ''
    content.vb: Public Shared Function Ceiling(v As PointF) As PointF
  overload: Petrosik.Utility.Extensions.Ceiling*
- uid: Petrosik.Utility.Extensions.Sum(System.Drawing.PointF)
  commentId: M:Petrosik.Utility.Extensions.Sum(System.Drawing.PointF)
  id: Sum(System.Drawing.PointF)
  isExtensionMethod: true
  parent: Petrosik.Utility.Extensions
  langs:
  - csharp
  - vb
  name: Sum(PointF)
  nameWithType: Extensions.Sum(PointF)
  fullName: Petrosik.Utility.Extensions.Sum(System.Drawing.PointF)
  type: Method
  source:
    remote:
      path: Utility/Utility.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: Sum
    path: ../Utility/Utility.cs
    startLine: 523
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: Gets sum of the x and y
  example: []
  syntax:
    content: public static float Sum(this PointF v)
    parameters:
    - id: v
      type: System.Drawing.PointF
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function Sum(v As PointF) As Single
  overload: Petrosik.Utility.Extensions.Sum*
- uid: Petrosik.Utility.Extensions.ToShortString(System.Numerics.BigInteger,System.Int32,System.Int32)
  commentId: M:Petrosik.Utility.Extensions.ToShortString(System.Numerics.BigInteger,System.Int32,System.Int32)
  id: ToShortString(System.Numerics.BigInteger,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: Petrosik.Utility.Extensions
  langs:
  - csharp
  - vb
  name: ToShortString(BigInteger, int, int)
  nameWithType: Extensions.ToShortString(BigInteger, int, int)
  fullName: Petrosik.Utility.Extensions.ToShortString(System.Numerics.BigInteger, int, int)
  type: Method
  source:
    remote:
      path: Utility/Utility.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: ToShortString
    path: ../Utility/Utility.cs
    startLine: 534
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: Creates string similar to debbuger display if the number is too big
  example: []
  syntax:
    content: public static string ToShortString(this BigInteger val, int digits = 8, int cutoff = 99999999)
    parameters:
    - id: val
      type: System.Numerics.BigInteger
      description: ''
    - id: digits
      type: System.Int32
      description: How many digits to show
    - id: cutoff
      type: System.Int32
      description: Number bigger than this is gonna get converted to the shorter version
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function ToShortString(val As BigInteger, digits As Integer = 8, cutoff As Integer = 99999999) As String
  overload: Petrosik.Utility.Extensions.ToShortString*
  nameWithType.vb: Extensions.ToShortString(BigInteger, Integer, Integer)
  fullName.vb: Petrosik.Utility.Extensions.ToShortString(System.Numerics.BigInteger, Integer, Integer)
  name.vb: ToShortString(BigInteger, Integer, Integer)
- uid: Petrosik.Utility.Extensions.Distance(System.Drawing.PointF,System.Drawing.PointF)
  commentId: M:Petrosik.Utility.Extensions.Distance(System.Drawing.PointF,System.Drawing.PointF)
  id: Distance(System.Drawing.PointF,System.Drawing.PointF)
  isExtensionMethod: true
  parent: Petrosik.Utility.Extensions
  langs:
  - csharp
  - vb
  name: Distance(PointF, PointF)
  nameWithType: Extensions.Distance(PointF, PointF)
  fullName: Petrosik.Utility.Extensions.Distance(System.Drawing.PointF, System.Drawing.PointF)
  type: Method
  source:
    remote:
      path: Utility/Utility.cs
      branch: master
      repo: https://github.com/petrosik/Utility-Stuff
    id: Distance
    path: ../Utility/Utility.cs
    startLine: 544
  assemblies:
  - PetrosikUtility
  namespace: Petrosik.Utility
  summary: Returns distance from v1 to v2
  example: []
  syntax:
    content: public static float Distance(this PointF v1, PointF v2)
    parameters:
    - id: v1
      type: System.Drawing.PointF
      description: ''
    - id: v2
      type: System.Drawing.PointF
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function Distance(v1 As PointF, v2 As PointF) As Single
  overload: Petrosik.Utility.Extensions.Distance*
references:
- uid: Petrosik.Utility
  commentId: N:Petrosik.Utility
  href: Petrosik.html
  name: Petrosik.Utility
  nameWithType: Petrosik.Utility
  fullName: Petrosik.Utility
  spec.csharp:
  - uid: Petrosik
    name: Petrosik
    href: Petrosik.html
  - name: .
  - uid: Petrosik.Utility
    name: Utility
    href: Petrosik.Utility.html
  spec.vb:
  - uid: Petrosik
    name: Petrosik
    href: Petrosik.html
  - name: .
  - uid: Petrosik.Utility
    name: Utility
    href: Petrosik.Utility.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Petrosik.Utility.Extensions.Rotate*
  commentId: Overload:Petrosik.Utility.Extensions.Rotate
  href: Petrosik.Utility.Extensions.html#Petrosik_Utility_Extensions_Rotate_System_Drawing_PointF_System_Single_
  name: Rotate
  nameWithType: Extensions.Rotate
  fullName: Petrosik.Utility.Extensions.Rotate
- uid: System.Drawing.PointF
  commentId: T:System.Drawing.PointF
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.pointf
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Drawing
  commentId: N:System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Drawing
  nameWithType: System.Drawing
  fullName: System.Drawing
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
- uid: Petrosik.Utility.Extensions.Direction*
  commentId: Overload:Petrosik.Utility.Extensions.Direction
  href: Petrosik.Utility.Extensions.html#Petrosik_Utility_Extensions_Direction_System_Drawing_PointF_System_Drawing_PointF_
  name: Direction
  nameWithType: Extensions.Direction
  fullName: Petrosik.Utility.Extensions.Direction
- uid: Petrosik.Utility.Extensions.Merge*
  commentId: Overload:Petrosik.Utility.Extensions.Merge
  href: Petrosik.Utility.Extensions.html#Petrosik_Utility_Extensions_Merge_System_Byte_____
  name: Merge
  nameWithType: Extensions.Merge
  fullName: Petrosik.Utility.Extensions.Merge
- uid: System.Byte[][]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[][]
  nameWithType: byte[][]
  fullName: byte[][]
  nameWithType.vb: Byte()()
  fullName.vb: Byte()()
  name.vb: Byte()()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: (
  - name: )
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: Petrosik.Utility.Extensions.Split*
  commentId: Overload:Petrosik.Utility.Extensions.Split
  href: Petrosik.Utility.Extensions.html#Petrosik_Utility_Extensions_Split_System_Byte___System_Int32_
  name: Split
  nameWithType: Extensions.Split
  fullName: Petrosik.Utility.Extensions.Split
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Petrosik.Utility.Extensions.Normalize*
  commentId: Overload:Petrosik.Utility.Extensions.Normalize
  href: Petrosik.Utility.Extensions.html#Petrosik_Utility_Extensions_Normalize_System_Single_System_Single_System_Single_
  name: Normalize
  nameWithType: Extensions.Normalize
  fullName: Petrosik.Utility.Extensions.Normalize
- uid: Petrosik.Utility.Extensions.Abs*
  commentId: Overload:Petrosik.Utility.Extensions.Abs
  href: Petrosik.Utility.Extensions.html#Petrosik_Utility_Extensions_Abs_System_Drawing_PointF_
  name: Abs
  nameWithType: Extensions.Abs
  fullName: Petrosik.Utility.Extensions.Abs
- uid: Petrosik.Utility.Extensions.Round*
  commentId: Overload:Petrosik.Utility.Extensions.Round
  href: Petrosik.Utility.Extensions.html#Petrosik_Utility_Extensions_Round_System_Drawing_PointF_System_Int32_
  name: Round
  nameWithType: Extensions.Round
  fullName: Petrosik.Utility.Extensions.Round
- uid: Petrosik.Utility.Extensions.Floor*
  commentId: Overload:Petrosik.Utility.Extensions.Floor
  href: Petrosik.Utility.Extensions.html#Petrosik_Utility_Extensions_Floor_System_Drawing_PointF_
  name: Floor
  nameWithType: Extensions.Floor
  fullName: Petrosik.Utility.Extensions.Floor
- uid: Petrosik.Utility.Extensions.Ceiling*
  commentId: Overload:Petrosik.Utility.Extensions.Ceiling
  href: Petrosik.Utility.Extensions.html#Petrosik_Utility_Extensions_Ceiling_System_Drawing_PointF_
  name: Ceiling
  nameWithType: Extensions.Ceiling
  fullName: Petrosik.Utility.Extensions.Ceiling
- uid: Petrosik.Utility.Extensions.Sum*
  commentId: Overload:Petrosik.Utility.Extensions.Sum
  href: Petrosik.Utility.Extensions.html#Petrosik_Utility_Extensions_Sum_System_Drawing_PointF_
  name: Sum
  nameWithType: Extensions.Sum
  fullName: Petrosik.Utility.Extensions.Sum
- uid: Petrosik.Utility.Extensions.ToShortString*
  commentId: Overload:Petrosik.Utility.Extensions.ToShortString
  href: Petrosik.Utility.Extensions.html#Petrosik_Utility_Extensions_ToShortString_System_Numerics_BigInteger_System_Int32_System_Int32_
  name: ToShortString
  nameWithType: Extensions.ToShortString
  fullName: Petrosik.Utility.Extensions.ToShortString
- uid: System.Numerics.BigInteger
  commentId: T:System.Numerics.BigInteger
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.biginteger
  name: BigInteger
  nameWithType: BigInteger
  fullName: System.Numerics.BigInteger
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: Petrosik.Utility.Extensions.Distance*
  commentId: Overload:Petrosik.Utility.Extensions.Distance
  href: Petrosik.Utility.Extensions.html#Petrosik_Utility_Extensions_Distance_System_Drawing_PointF_System_Drawing_PointF_
  name: Distance
  nameWithType: Extensions.Distance
  fullName: Petrosik.Utility.Extensions.Distance
