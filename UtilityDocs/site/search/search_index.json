{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"[ ] Introduction Collection of usefull code and code that i use in most of my projects. Features Collection of utility methods Collection of utility methods for UnityEngine Collection of utility methods for ImageSharp Sqlite Helper Chance Table Determistic Random Versioning Tool Pathfinding Support For any questions or help, feel free to contact us or open an issue.","title":"Home"},{"location":"#introduction","text":"Collection of usefull code and code that i use in most of my projects.","title":"Introduction"},{"location":"#features","text":"Collection of utility methods Collection of utility methods for UnityEngine Collection of utility methods for ImageSharp Sqlite Helper Chance Table Determistic Random Versioning Tool Pathfinding","title":"Features"},{"location":"#support","text":"For any questions or help, feel free to contact us or open an issue.","title":"Support"},{"location":"enums/","text":"Enums Serializable Rarity None = 0 Common = 45 Uncommon = 21 Rare = 10 Epic = 4 Legendary = 2 Artifact = 1 Note More common bigger number Serializable Flags GeneralDirections None = 0 Up = 1 Down = 2 Left = 4 Right = 8 Fowards = 16 Backwards = 32 Serializable SQLOptions Save Load SaveAll LoadAll Delete Update Sync Serializable InfoType Info Warn Error Important VersioningActionType None = -1 ModifyValue AddProperty RemoveProperty ModifyProperty AddMethod RemoveMethod ModifyMethod Warning These are not implemented: AddMethod RemoveMethod ModifyMethod Serializable PathOccupancy Blocked = 0 Clear = 1 LowP = 2 MediumP = 4 HighP = 8 Path = 128","title":"Enums"},{"location":"enums/#enums","text":"Serializable","title":"Enums"},{"location":"enums/#rarity","text":"None = 0 Common = 45 Uncommon = 21 Rare = 10 Epic = 4 Legendary = 2 Artifact = 1 Note More common bigger number Serializable Flags","title":"Rarity"},{"location":"enums/#generaldirections","text":"None = 0 Up = 1 Down = 2 Left = 4 Right = 8 Fowards = 16 Backwards = 32 Serializable","title":"GeneralDirections"},{"location":"enums/#sqloptions","text":"Save Load SaveAll LoadAll Delete Update Sync Serializable","title":"SQLOptions"},{"location":"enums/#infotype","text":"Info Warn Error Important","title":"InfoType"},{"location":"enums/#versioningactiontype","text":"None = -1 ModifyValue AddProperty RemoveProperty ModifyProperty AddMethod RemoveMethod ModifyMethod Warning These are not implemented: AddMethod RemoveMethod ModifyMethod Serializable","title":"VersioningActionType"},{"location":"enums/#pathoccupancy","text":"Blocked = 0 Clear = 1 LowP = 2 MediumP = 4 HighP = 8 Path = 128","title":"PathOccupancy"},{"location":"test/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"test/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"test/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"test/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"ImageSharpUtility/introduction/","text":"ImageSharp Utility","title":"Introduction"},{"location":"ImageSharpUtility/introduction/#imagesharp-utility","text":"","title":"ImageSharp Utility"},{"location":"ImageSharpUtility/methods/","text":"Methods","title":"Methods"},{"location":"ImageSharpUtility/methods/#methods","text":"","title":"Methods"},{"location":"Pathfinding/AStar/introduction/","text":"A*","title":"Introduction"},{"location":"Pathfinding/AStar/introduction/#a","text":"","title":"A*"},{"location":"Pathfinding/AStar/methods/","text":"Methods","title":"Methods"},{"location":"Pathfinding/AStar/methods/#methods","text":"","title":"Methods"},{"location":"Pathfinding/GridBase/introduction/","text":"Grid Base","title":"Introduction"},{"location":"Pathfinding/GridBase/introduction/#grid-base","text":"","title":"Grid Base"},{"location":"Pathfinding/GridBase/methods/","text":"Methods","title":"Methods"},{"location":"Pathfinding/GridBase/methods/#methods","text":"","title":"Methods"},{"location":"Pathfinding/PseudoAStar/introduction/","text":"Pseudo A*","title":"Introduction"},{"location":"Pathfinding/PseudoAStar/introduction/#pseudo-a","text":"","title":"Pseudo A*"},{"location":"Pathfinding/PseudoAStar/methods/","text":"Methods","title":"Methods"},{"location":"Pathfinding/PseudoAStar/methods/#methods","text":"","title":"Methods"},{"location":"SqlManager/introduction/","text":"Sql Manager","title":"Introduction"},{"location":"SqlManager/introduction/#sql-manager","text":"","title":"Sql Manager"},{"location":"SqlManager/methods/","text":"Methods","title":"Methods"},{"location":"SqlManager/methods/#methods","text":"","title":"Methods"},{"location":"UnityUtility/introduction/","text":"Unity Utility","title":"Introduction"},{"location":"UnityUtility/introduction/#unity-utility","text":"","title":"Unity Utility"},{"location":"UnityUtility/methods/","text":"Methods","title":"Methods"},{"location":"UnityUtility/methods/#methods","text":"","title":"Methods"},{"location":"Utility/introduction/","text":"Utility Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Introduction"},{"location":"Utility/introduction/#utility","text":"Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Utility"},{"location":"Utility/methods/","text":"Methods string?[] SplitText(...) Splits text based on spaces or by \" Method: string?[] SplitText(string message, out string? tempparam, int paramlenght = 8, char prefix = '$') message - Original text to split tempparam - Remaining text that couldn't fit paramlenght (default: 8) - How many words to split for prefix (default: $) - Prefix to remove int[] lenght = new int[] { 0, 1 }; string mainmessage = message; string?[] param = new string[paramlenght]; for (int i = 0; i < paramlenght; i++) { param[i] = null; } lenght[0] = mainmessage.IndexOf(' '); if (lenght[0] <= 0) { lenght[0] = message.Length; } if (message[0] == prefix) { mainmessage = mainmessage.Substring(1, --lenght[0]); } else { mainmessage = mainmessage.Substring(0, lenght[0]); lenght[0]--; } param[0] = mainmessage; tempparam = null; if (++lenght[0] != message.Length) { tempparam = message.Substring(lenght[0]); while ((tempparam != null && tempparam != \"\") && lenght[1] <= param.GetLength(0) - 1) { if (tempparam.StartsWith(\" \\\"\")) { lenght[0] = tempparam.IndexOf('\"', 2); if (lenght[0] < 0) { lenght[0] = tempparam.Length; } param[lenght[1]] = tempparam.Substring(2, lenght[0] - 2); tempparam = tempparam.Substring(lenght[0] + 1); lenght[1]++; } else if (tempparam.StartsWith(' ')) { lenght[0] = tempparam.IndexOf(\" \", 1); if (lenght[0] < 0) { lenght[0] = tempparam.Length; } param[lenght[1]] = tempparam.Substring(1, lenght[0] - 1); tempparam = tempparam.Substring(lenght[0]); lenght[1]++; } } } return param;","title":"Methods"},{"location":"Utility/methods/#methods","text":"","title":"Methods"},{"location":"Utility/methods/#string-splittext","text":"Splits text based on spaces or by \" Method: string?[] SplitText(string message, out string? tempparam, int paramlenght = 8, char prefix = '$') message - Original text to split tempparam - Remaining text that couldn't fit paramlenght (default: 8) - How many words to split for prefix (default: $) - Prefix to remove int[] lenght = new int[] { 0, 1 }; string mainmessage = message; string?[] param = new string[paramlenght]; for (int i = 0; i < paramlenght; i++) { param[i] = null; } lenght[0] = mainmessage.IndexOf(' '); if (lenght[0] <= 0) { lenght[0] = message.Length; } if (message[0] == prefix) { mainmessage = mainmessage.Substring(1, --lenght[0]); } else { mainmessage = mainmessage.Substring(0, lenght[0]); lenght[0]--; } param[0] = mainmessage; tempparam = null; if (++lenght[0] != message.Length) { tempparam = message.Substring(lenght[0]); while ((tempparam != null && tempparam != \"\") && lenght[1] <= param.GetLength(0) - 1) { if (tempparam.StartsWith(\" \\\"\")) { lenght[0] = tempparam.IndexOf('\"', 2); if (lenght[0] < 0) { lenght[0] = tempparam.Length; } param[lenght[1]] = tempparam.Substring(2, lenght[0] - 2); tempparam = tempparam.Substring(lenght[0] + 1); lenght[1]++; } else if (tempparam.StartsWith(' ')) { lenght[0] = tempparam.IndexOf(\" \", 1); if (lenght[0] < 0) { lenght[0] = tempparam.Length; } param[lenght[1]] = tempparam.Substring(1, lenght[0] - 1); tempparam = tempparam.Substring(lenght[0]); lenght[1]++; } } } return param;","title":"string?[] SplitText(...)"},{"location":"Utility/ChanceTable/introduction/","text":"ChanceTable","title":"Introduction"},{"location":"Utility/ChanceTable/introduction/#chancetable","text":"","title":"ChanceTable"},{"location":"Utility/ChanceTable/methods/","text":"Methods","title":"Methods"},{"location":"Utility/ChanceTable/methods/#methods","text":"","title":"Methods"},{"location":"Utility/DetRandom/introduction/","text":"DetRandom (deterministic friendly) Random with exposed Seed and number of actions(Pulls) taken. Tip Works very similar to normal Random Fields uint Pulls The number of actions taken from the creation of the random int Seed Seed of the random Methods overview Next(int minValue, int maxValue) { Pulls++; return r.Next(minValue, maxValue); } public int Next(int maxValue) { Pulls++; return r.Next(maxValue); } public int Next() { Pulls++; return r.Next(); } public double NextDouble() { Pulls++; return r.NextDouble(); } public float NextSingle() { Pulls++; return r.NextSingle(); } public long NextInt64() { Pulls++; return r.NextInt64(); } public long NextInt64(int minValue, int maxValue) { Pulls++; return r.NextInt64(minValue, maxValue); } public long NextInt64(int maxValue) { Pulls++; return r.NextInt64(maxValue); } public void NextBytes(byte[] buffer) { Pulls += (uint)buffer.Length; r.NextBytes(buffer); } **Export()** Exports string that can be inported","title":"Introduction"},{"location":"Utility/DetRandom/introduction/#detrandom","text":"(deterministic friendly) Random with exposed Seed and number of actions(Pulls) taken. Tip Works very similar to normal Random","title":"DetRandom"},{"location":"Utility/DetRandom/introduction/#fields","text":"uint Pulls The number of actions taken from the creation of the random int Seed Seed of the random","title":"Fields"},{"location":"Utility/DetRandom/introduction/#methods-overview","text":"Next(int minValue, int maxValue) { Pulls++; return r.Next(minValue, maxValue); } public int Next(int maxValue) { Pulls++; return r.Next(maxValue); } public int Next() { Pulls++; return r.Next(); } public double NextDouble() { Pulls++; return r.NextDouble(); } public float NextSingle() { Pulls++; return r.NextSingle(); } public long NextInt64() { Pulls++; return r.NextInt64(); } public long NextInt64(int minValue, int maxValue) { Pulls++; return r.NextInt64(minValue, maxValue); } public long NextInt64(int maxValue) { Pulls++; return r.NextInt64(maxValue); } public void NextBytes(byte[] buffer) { Pulls += (uint)buffer.Length; r.NextBytes(buffer); } **Export()** Exports string that can be inported","title":"Methods overview"},{"location":"Utility/DetRandom/methods/","text":"Methods","title":"Methods"},{"location":"Utility/DetRandom/methods/#methods","text":"","title":"Methods"},{"location":"VersioningTool/introduction/","text":"Versioning Tool Tool for automaticly updating classes and structs from some state to other. In future they will also be able to update methods. Fields IReadOnlyDictionary< Version , VersioningAction > Actions Contains all actions that Methods overview Add ( Version , VersioningAction ) Adds Action Remove ( Version ) Removes Action Modify ( Version , VersioningAction ) Modifies Action specified by VersioningAction Insert ( Version , VersioningAction ) Insesrts VersioningAction into the list. If the version is already inside it shifts it and all after that conflicts Shift ( Version , Version ) Moves the action on version to the version Clear () Removes all Actions CompleteUpdate (TIn, Version , Version ) Applies the updates to the object that are > than version and < than version and tries to convert it to the output type SimpleUpdate (object, Version , Version ) Applies the updates to the object that are > than version and < than version AutoGenerateVersions (object, object, Version ?, Version ?) Tries to generate actions that will change the current object into the target. Additionally you can specify what version they will start and tries to fit into the version","title":"Introduction"},{"location":"VersioningTool/introduction/#versioning-tool","text":"Tool for automaticly updating classes and structs from some state to other. In future they will also be able to update methods.","title":"Versioning Tool"},{"location":"VersioningTool/introduction/#fields","text":"IReadOnlyDictionary< Version , VersioningAction > Actions Contains all actions that","title":"Fields"},{"location":"VersioningTool/introduction/#methods-overview","text":"Add ( Version , VersioningAction ) Adds Action Remove ( Version ) Removes Action Modify ( Version , VersioningAction ) Modifies Action specified by VersioningAction Insert ( Version , VersioningAction ) Insesrts VersioningAction into the list. If the version is already inside it shifts it and all after that conflicts Shift ( Version , Version ) Moves the action on version to the version Clear () Removes all Actions CompleteUpdate (TIn, Version , Version ) Applies the updates to the object that are > than version and < than version and tries to convert it to the output type SimpleUpdate (object, Version , Version ) Applies the updates to the object that are > than version and < than version AutoGenerateVersions (object, object, Version ?, Version ?) Tries to generate actions that will change the current object into the target. Additionally you can specify what version they will start and tries to fit into the version","title":"Methods overview"},{"location":"VersioningTool/methods/","text":"Methods Add Adds Action void Add(Version version, VersioningAction action) Remove Removes Action void Remove(Version version) Modify Modifies Action specified by version void Modify(Version version, VersioningAction action) Insert Insesrts action into the list. If the version is already inside it shifts it and all after that conflicts void Insert(Version version, VersioningAction action) Shift Moves the action on oldVersion to the newVersion void Shift(Version oldVersion, Version newVersion) Clear Removes all Actions void Clear() CompleteUpdate Applies the updates to the obj that are > than current and <= than target version and tries to convert it to the output type Tout CompleteUpdate(TIn obj, Version current, Version target) SimpleUpdate Applies the updates to the obj that are > than current and <= than target object SimpleUpdate(object obj, Version current, Version target) AutoGenerateVersions Tries to generate actions that will change the current object into the target. Additionally you can specify what version they will start and tries to fit into the maxv version void AutoGenerateVersions(object current, object target, Version? currentv = null, Version? maxv = null) Warning Deletes all current actions! Note I give up on trying to also get difference between values. mby in the future(prob not)","title":"Methods"},{"location":"VersioningTool/methods/#methods","text":"","title":"Methods"},{"location":"VersioningTool/methods/#add","text":"Adds Action void Add(Version version, VersioningAction action)","title":"Add"},{"location":"VersioningTool/methods/#remove","text":"Removes Action void Remove(Version version)","title":"Remove"},{"location":"VersioningTool/methods/#modify","text":"Modifies Action specified by version void Modify(Version version, VersioningAction action)","title":"Modify"},{"location":"VersioningTool/methods/#insert","text":"Insesrts action into the list. If the version is already inside it shifts it and all after that conflicts void Insert(Version version, VersioningAction action)","title":"Insert"},{"location":"VersioningTool/methods/#shift","text":"Moves the action on oldVersion to the newVersion void Shift(Version oldVersion, Version newVersion)","title":"Shift"},{"location":"VersioningTool/methods/#clear","text":"Removes all Actions void Clear()","title":"Clear"},{"location":"VersioningTool/methods/#completeupdate","text":"Applies the updates to the obj that are > than current and <= than target version and tries to convert it to the output type Tout CompleteUpdate(TIn obj, Version current, Version target)","title":"CompleteUpdate"},{"location":"VersioningTool/methods/#simpleupdate","text":"Applies the updates to the obj that are > than current and <= than target object SimpleUpdate(object obj, Version current, Version target)","title":"SimpleUpdate"},{"location":"VersioningTool/methods/#autogenerateversions","text":"Tries to generate actions that will change the current object into the target. Additionally you can specify what version they will start and tries to fit into the maxv version void AutoGenerateVersions(object current, object target, Version? currentv = null, Version? maxv = null) Warning Deletes all current actions! Note I give up on trying to also get difference between values. mby in the future(prob not)","title":"AutoGenerateVersions"},{"location":"VersioningTool/versioningaction/","text":"Versioning Action Class that contains actions that specify what needs to be done. Fields VersioningActionType Type { get; set; } Action type string? OriginName { get; set; } Name of the field that you want to modify Type? OriginType { get; set; } Type of the field that you are modifying string? TargetName { get; set; } If you are changing or creating field this will be the final name Type? TargetType { get; set; } If you are chanfing or creating field this will be the final type object? Value { get; set; } Value that will be set in selected field Func<object, object>? ValueConverter { get; set; } This can be value converter or value modifer public bool IsField { get; set; } IsField Only applies for field/property changes true = field, false = property FieldAttributes FAttributes { get; set; } Additional atributes that you want to set or modify for field atribute PropertyAttributes PAttributes { get; set; } Additional atributes that you want to set or modify for property atribute Note OriginName and OriginType are pairs you need to fill out both. Same with target. Methods There are only constructors. Tip Make sure to use correct constructor if you don't know what you are doing. There are multiple preset constructors that you can use, and for the most part it's all you need.","title":"Versioning Action"},{"location":"VersioningTool/versioningaction/#versioning-action","text":"Class that contains actions that specify what needs to be done.","title":"Versioning Action"},{"location":"VersioningTool/versioningaction/#fields","text":"VersioningActionType Type { get; set; } Action type string? OriginName { get; set; } Name of the field that you want to modify Type? OriginType { get; set; } Type of the field that you are modifying string? TargetName { get; set; } If you are changing or creating field this will be the final name Type? TargetType { get; set; } If you are chanfing or creating field this will be the final type object? Value { get; set; } Value that will be set in selected field Func<object, object>? ValueConverter { get; set; } This can be value converter or value modifer public bool IsField { get; set; } IsField Only applies for field/property changes true = field, false = property FieldAttributes FAttributes { get; set; } Additional atributes that you want to set or modify for field atribute PropertyAttributes PAttributes { get; set; } Additional atributes that you want to set or modify for property atribute Note OriginName and OriginType are pairs you need to fill out both. Same with target.","title":"Fields"},{"location":"VersioningTool/versioningaction/#methods","text":"There are only constructors. Tip Make sure to use correct constructor if you don't know what you are doing. There are multiple preset constructors that you can use, and for the most part it's all you need.","title":"Methods"}]}